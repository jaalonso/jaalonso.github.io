<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Vestigium (Publicaciones sobre AI)</title><link>https://jaalonso.github.io/vestigium/</link><description></description><atom:link href="https://jaalonso.github.io/vestigium/categories/ai.xml" rel="self" type="application/rss+xml"></atom:link><language>es</language><copyright>Contents © 2025 &lt;a href="mailto:"&gt;José A. Alonso&lt;/a&gt; 
&lt;a rel="license" href="https://creativecommons.org/licenses/by-nc-sa/4.0/"&gt;
&lt;img alt="Creative Commons License BY-NC-SA"
style="border-width:0; margin-bottom:12px;"
src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"&gt;&lt;/a&gt;</copyright><lastBuildDate>Sat, 12 Jul 2025 06:27:34 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Readings shared July 11, 2025</title><link>https://jaalonso.github.io/vestigium/posts/2025/07/12-readings_shared_07-11-25/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;The readings shared in &lt;a href="https://bsky.app/profile/jalonso.bsky.social"&gt;Bluesky&lt;/a&gt; on 11 July 2025 are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://huggingface.co/blog/AI-MO/kimina-prover"&gt;Kimina-Prover: Applying test-time RL search on large formal reasoning models&lt;/a&gt;. ~ Haiming Wang et als. #LLMs #ITP #LeanProver&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/rLr6VCLlq64"&gt;AI for mathematical discovery (symbolic, neural and neuro-symbolic methods)&lt;/a&gt;. ~ Moa Johansson. #AI #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/cursos"&gt;Cursos impartidos con materiales completos: apuntes, ejercicios y exámenes resueltos&lt;/a&gt;. #Lógica #ProgramaciónLógica #ProgramaciónFuncional #IA #RazonamientoAutomático&lt;/li&gt;
&lt;/ul&gt;</description><category>AI</category><guid>https://jaalonso.github.io/vestigium/posts/2025/07/12-readings_shared_07-11-25/</guid><pubDate>Sat, 12 Jul 2025 04:00:00 GMT</pubDate></item><item><title>Readings shared July 5, 2025</title><link>https://jaalonso.github.io/vestigium/posts/2025/07/06-readings_shared_07-05-25/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;The readings shared in &lt;a href="https://bsky.app/profile/jalonso.bsky.social"&gt;Bluesky&lt;/a&gt; on 5 July 2025 are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://adam.math.hhu.de/#/g/kbuzzard/FilterGame"&gt;The filter game (in Lean 4)&lt;/a&gt;. ~ Kevin Buzzard. #ITP #LeanProver #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://people.eng.unimelb.edu.au/rizkallahc/theses/chew-yi-feng-masters-thesis.pdf"&gt;Formal verification of quantum stabiliser codes by stabiliser formalism&lt;/a&gt;. ~ Qiuyi Feng. #ITP #CoqProver&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ntrs.nasa.gov/api/citations/20250006044/downloads/NFM_Keynote_STRIVES-psm.pdf"&gt;Formal methods at NASA: Past, present, and future&lt;/a&gt;. ~ Paul Miner, Natasha Neogi. #FormalMethods #ITP #PVS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hal.science/hal-05133722/document"&gt;A proof-assisted conversion of signal temporal logic formulas into negative normal form&lt;/a&gt;. ~ Danil Berrah, François Pessaux, Alexandre Chapoutot. #ITP #Rocq&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kairose-master.github.io/mu_eq_pi/pdf/mu_eq_pi.pdf"&gt;Functorial flattening of the state monad via vector‐space projection (A formally verified collapse model in Lean 4)&lt;/a&gt;. ~ Jinu Jang. #ITP #LeanProver&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2507.00782v1"&gt;A diagrammatic calculus for a functional model of natural language semantics&lt;/a&gt;. ~ Matthieu Pierre Boyer. #Haskell #FunctionalProgramming&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.TYPES.2024.5"&gt;Implementing a type theory with observational equality, using normalisation by evaluation&lt;/a&gt;. ~ Matthew Sirman, Meven Lennon-Bertrand, Neel Krishnaswami. #Haskell #FunctionalProgramming&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2507.01903v1"&gt;AI4Research: A survey of artificial intelligence for scientific research&lt;/a&gt;. ~ Qiguang Chen et als. #AI&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/cursos/i1m-18"&gt;Curso "Informática (2018-19)"&lt;/a&gt;. #Haskell #ProgramaciónFuncional #Algorítmica #CálculoSimbólico #Maxima&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.archive.org/web/http://www.cs.us.es/~jalonso/cursos/i1m-18/temas/2018-19-I1M-temas-PF.pdf"&gt;Temas de "Programación funcional" (2018-19)&lt;/a&gt;. #Haskell #ProgramaciónFuncional&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.archive.org/web/http://www.cs.us.es/~jalonso/cursos/i1m-18/ejercicios/ejercicios-I1M-2018.pdf"&gt;Ejercicios de programación funcional con Haskell (curso 2018-19)&lt;/a&gt;. #Haskell #ProgramaciónFuncional&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.archive.org/web/https://raw.githubusercontent.com/jaalonso/Examenes_de_PF_con_Haskell_Vol10/master/Libro/Examenes_de_PF_con_Haskell_Vol10.pdf"&gt;Exámenes de programación funcional con Haskell (curso 2018-19)&lt;/a&gt;. #Haskell #ProgramaciónFuncional&lt;/li&gt;
&lt;/ul&gt;</description><category>AI</category><category>CoqProver</category><category>FormalMethods</category><category>FunctionalProgramming</category><category>Haskell</category><category>ITP</category><category>LeanProver</category><category>Math</category><category>Maxima</category><category>PVS</category><category>Rocq</category><guid>https://jaalonso.github.io/vestigium/posts/2025/07/06-readings_shared_07-05-25/</guid><pubDate>Sun, 06 Jul 2025 04:00:00 GMT</pubDate></item><item><title>Readings shared June 29, 2025</title><link>https://jaalonso.github.io/vestigium/posts/2025/06/30-readings_shared_06-29-25/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;The readings shared in &lt;a href="https://bsky.app/profile/jalonso.bsky.social"&gt;Bluesky&lt;/a&gt; on 29 June 2025 are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://link.springer.com/article/10.1007/s10817-025-09724-x"&gt;Constructing the Lie algebra of smooth vector fields on a Lie group in Isabelle/HOL&lt;/a&gt;. ~ Richard Schmoetten, Jacques D. Fleuriot. #ITP #IsabelleHOL #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://inria.hal.science/hal-05128954/document"&gt;A Rocq formalization of simplicial Lagrange finite elements&lt;/a&gt;. ~ Sylvie Boldo, François Clément, Vincent Martin, Micaela Mayero, Houda Mouhcine. #ITP #Rocq #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aaltodoc.aalto.fi/server/api/core/bitstreams/e401c1e1-3dcb-4a31-b832-5ace8081dee9/content"&gt;Formal correctness proof of a mapping from a software specification language to the relational algebra&lt;/a&gt;. ~ Stan Dargent. #ITP #IsabelleHOL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://eprintspublications.npl.co.uk/10181/1/MS60.pdf"&gt;Functional programming (with some type theory) for metrology&lt;/a&gt;. ~ André Videla, Keith Lines. #Haskell #Idris #FunctionalProgramming&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2506.19923v1"&gt;Prover Agent: An agent-based framework for formal mathematical proofs&lt;/a&gt;. ~ Kaito Baba, Chaoran Liu, Shuhei Kurita, Akiyoshi Sannai. #LLMs #ITP #LeanProver&lt;/li&gt;
&lt;li&gt;&lt;a href="https://link.springer.com/article/10.1007/s12065-025-01062-6"&gt;Pearclustering: a novel clustering algorithm with an application to bike mobility&lt;/a&gt;. ~ Francisco Marquez-Saldaña, Gonzalo A. Aranda-Corral, Joaquín Borrego-Díaz. #AI&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/cursos/m-ra-14"&gt;Curso "Razonamiento automático (2014-15)"&lt;/a&gt;. #RazonamientoAutomático #DemostraciónInteractiva #IsabelleHOL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/cursos/i1m-15"&gt;Curso "Informática (2015-16)"&lt;/a&gt;. #Haskell #ProgramaciónFuncional #Algorítmica #CálculoSimbólico #Maxima&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.archive.org/web/http://www.cs.us.es/~jalonso/cursos/i1m-15/temas/2015-16-IM-temas-PF.pdf"&gt;Temas de "Programación funcional" (2015-16)&lt;/a&gt;. #Haskell #ProgramaciónFuncional&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.archive.org/web/http://www.cs.us.es/~jalonso/cursos/i1m-15/ejercicios/ejercicios-I1M-2015.pdf"&gt;Ejercicios de programación funcional con Haskell (curso 2015–16)&lt;/a&gt;. #Haskell #ProgramaciónFuncional&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.archive.org/web/https://raw.githubusercontent.com/jaalonso/Examenes_de_PF_con_Haskell_Vol7/master/Libro/Examenes_de_PF_con_Haskell_Vol7.pdf"&gt;Exámenes de programación funcional con Haskell (curso 2015–16)&lt;/a&gt;. #Haskell #ProgramaciónFuncional&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/cursos/li-15"&gt;Curso "Lógica informática (2015-16)&lt;/a&gt;. #Lógica #ProgramaciónLógica #Prolog&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.archive.org/web/http://www.cs.us.es/~jalonso/cursos/li-15/temas/temas-LI-2015-16.pdf"&gt;Temas de "Lógica informática" (curso 2015-16)&lt;/a&gt;. #Lógica #ProgramaciónLógica #Prolog&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.archive.org/web/https://www.cs.us.es/~jalonso/cursos/li-15/ejercicios/ejercicios-LI-2015-16.pdf"&gt;Ejercicios de "Lógica informática" (curso 2015-16)&lt;/a&gt;. #Lógica&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/cursos/lmf-15"&gt;Curso "Lógica matemática y fundamentos (2015-16)"&lt;/a&gt;. #Lógica #Haskell #ProgramaciónFuncional #IsabelleHOL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/cursos/i1m-16"&gt;Curso "Informática (2016-17)"&lt;/a&gt;. #Haskell #ProgramaciónFuncional #Algorítmica #CálculoSimbólico #Maxima&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.archive.org/web/http://www.cs.us.es/~jalonso/cursos/i1m-16/temas/2016-17-IM-temas-PF.pdf"&gt;Temas de "Programación funcional" (2016-17)&lt;/a&gt;. #Haskell #ProgramaciónFuncional&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.archive.org/web/http://www.cs.us.es/~jalonso/cursos/i1m-16/ejercicios/ejercicios-I1M-2016.pdf"&gt;Ejercicios de programación funcional con Haskell (curso 2016-17)&lt;/a&gt;. #Haskell #ProgramaciónFuncional&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.archive.org/web/https://raw.githubusercontent.com/jaalonso/Examenes_de_PF_con_Haskell_Vol8/master/Libro/Examenes_de_PF_con_Haskell_Vol8.pdf"&gt;Exámenes de programación funcional con Haskell (curso 2016-17)&lt;/a&gt;. #Haskell #ProgramaciónFuncional&lt;/li&gt;
&lt;/ul&gt;</description><category>AI</category><category>FunctionalProgramming</category><category>Haskell</category><category>Idris</category><category>IsabelleHOL</category><category>ITP</category><category>LeanProver</category><category>LLMs</category><category>Logic</category><category>LogicProgramming</category><category>Math</category><category>Maxima</category><category>Prolog</category><category>Rocq</category><guid>https://jaalonso.github.io/vestigium/posts/2025/06/30-readings_shared_06-29-25/</guid><pubDate>Mon, 30 Jun 2025 04:00:00 GMT</pubDate></item><item><title>Readings shared June 27, 2025</title><link>https://jaalonso.github.io/vestigium/posts/2025/06/28-readings_shared_06-27-25/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;The readings shared in &lt;a href="https://bsky.app/profile/jalonso.bsky.social"&gt;Bluesky&lt;/a&gt; on 27 June 2025 are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://youtu.be/6uLXA9KROBg"&gt;Formalizing a proof in Lean by hand&lt;/a&gt;. ~ Terence Tao. #ITP #LeanProver #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2506.18616v2"&gt;A formalization of the Ionescu-Tulcea theorem in Mathlib&lt;/a&gt;. ~ Etienne Marion. #ITP #LeanProver #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2503.00959"&gt;Formalizing zeta and L-functions in Lean&lt;/a&gt;. ~ David Loeffler, Michael Stoll. #ITP #LeanProver #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://thmprover.wordpress.com/2025/06/24/redefinitions-in-mizar/"&gt;Redefinitions in Mizar&lt;/a&gt;. ~ Alex Nelson. #ITP #Mizar #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://openreview.net/pdf?id=HuvAM5x2xG"&gt;Position: Formal mathematical reasoning (a new frontier in AI)&lt;/a&gt;. ~ Kaiyu Yang et als. #AI #LLMs #Math #AI4Math #ITP&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2506.18383v1"&gt;LOGICPO: Efficient translation of NL-based logical problems to FOL using LLMs and preference optimization&lt;/a&gt;. ~ Koushik Viswanadha, Deepanway Ghosal, Somak Aditay. #LLMs #Math #Autoformalization&lt;/li&gt;
&lt;/ul&gt;</description><category>AI</category><category>AI4Math</category><category>Autoformalization</category><category>CategoryTheory</category><category>CompSci</category><category>ITP</category><category>LeanProver</category><category>LLMs</category><category>Math</category><category>Mizar</category><guid>https://jaalonso.github.io/vestigium/posts/2025/06/28-readings_shared_06-27-25/</guid><pubDate>Sat, 28 Jun 2025 04:00:00 GMT</pubDate></item><item><title>Readings shared June 19, 2025</title><link>https://jaalonso.github.io/vestigium/posts/2025/06/20-readings_shared_06-19-25/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;The readings shared in &lt;a href="https://bsky.app/profile/jalonso.bsky.social"&gt;Bluesky&lt;/a&gt; on 19 June 2025 are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.isa-afp.org/entries/Galois_Energy_Games.html"&gt;Galois energy games (in Isabelle/HOL)&lt;/a&gt;. ~ Caroline Lemke. #ITP #IsabelleHOL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.isa-afp.org/entries/Chomsky_Schuetzenberger.html"&gt;Chomsky-Schützenberger representation theorem (in Isabelle/HOL)&lt;/a&gt;. ~ Moritz Roos. #ITP #IsabelleHOL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.isa-afp.org/entries/Dyck_Language.html"&gt;Dyck language (in Isabelle/HOL)&lt;/a&gt;. ~ Tobias Nipkow, Moritz Roos. #ITP #IsabelleHOL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dl.acm.org/doi/pdf/10.1145/3729331"&gt;Making concurrent hardware verification sequential&lt;/a&gt;. ~ Thomas Bourgeat, Jiazheng Liu, Adam Chlipala, Arvind. #ITP #CoqProver #Rocq&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2506.11487v1"&gt;Reviving DSP for advanced theorem proving in the era of reasoning models&lt;/a&gt;. ~ Chenrui Cao, Liangcheng Song, Zenan Li, Xinyi Le, Xian Zhang, Hui Xue, Fan Yang. #AI #Math #AIforMath #LLMs #ITP #LeanProver&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/vestigium/posts/2025/06/19-can-ai-quicken-the-pace-of-math-discovery/"&gt;Reseña de «Can A.I. quicken the pace of math discovery?»&lt;/a&gt;. #AI #Math #AIforMath #ITP #LeanProver&lt;/li&gt;
&lt;/ul&gt;</description><category>AI</category><category>AIforMath</category><category>CoqProver</category><category>IsabelleHOL</category><category>ITP</category><category>LeanProver</category><category>LLMs</category><category>Math</category><category>Rocq</category><guid>https://jaalonso.github.io/vestigium/posts/2025/06/20-readings_shared_06-19-25/</guid><pubDate>Fri, 20 Jun 2025 04:00:00 GMT</pubDate></item><item><title>Reseña de «Can A.I. quicken the pace of math discovery?»</title><link>https://jaalonso.github.io/vestigium/posts/2025/06/19-can-ai-quicken-the-pace-of-math-discovery/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;El artículo «&lt;a href="https://www.nytimes.com/2025/06/19/science/math-ai-darpa.html"&gt;Can A.I. quicken the pace of math discovery?&lt;/a&gt;» presenta la
iniciativa "&lt;a href="https://www.darpa.mil/research/programs/expmath-exponential-mathematics"&gt;Exponentiating Mathematics&lt;/a&gt;" de DARPA. Su objetivo es
desarrollar una IA como coautor para acelerar la investigación en
matemáticas.&lt;/p&gt;
&lt;p&gt;El programa confronta limitaciones de los LLMs actuales. Estos fallan en
razonamiento lógico-matemático y generan "alucinaciones". La
solución propuesta integra IA con asistentes de prueba formales como
&lt;a href="https://en.wikipedia.org/wiki/Lean_(proof_assistant)"&gt;Lean&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Lean_(proof_assistant)"&gt;Lean&lt;/a&gt; desempeña el papel central como verificador. Los LLMs generan
pruebas formales que Lean acepta o rechaza según su corrección. Esta
iteración crea un ciclo de refinamiento continuo. Su lenguaje específico
resulta arduo, pero su metodología es fundamental. La verificación
formal garantiza corrección absoluta y elimina alucinaciones de LLMs
generativos.&lt;/p&gt;
&lt;p&gt;La meta es crear IA que sugiera ideas y construya pruebas
verificadas. Los sistemas formales garantizan fiabilidad absoluta. Esto
transforma herramientas actuales en colaboradores matemáticos
confiables.&lt;/p&gt;</description><category>AI</category><category>ITP</category><category>LeanProver</category><category>Math</category><guid>https://jaalonso.github.io/vestigium/posts/2025/06/19-can-ai-quicken-the-pace-of-math-discovery/</guid><pubDate>Thu, 19 Jun 2025 15:00:00 GMT</pubDate></item><item><title>Readings shared June 15, 2025</title><link>https://jaalonso.github.io/vestigium/posts/2025/06/16-readings_shared_06-15-25/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;The readings shared in &lt;a href="https://bsky.app/profile/jalonso.bsky.social"&gt;Bluesky&lt;/a&gt; on 15 June 2025 are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.dcs.gla.ac.uk/~michele/papers/SAC2025.pdf"&gt;BiCoq: Bigraphs formalisation with Coq&lt;/a&gt;. ~ Cécile Marcon et als. #ITP #CoqProver #Rocq #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://byorgey.github.io/blog/posts/2025/06/10/comprog-hs-intro.html"&gt;Introduction to competitive programming in Haskell&lt;/a&gt;. ~ Brent Yorgey. #Haskell #FunctionalProgramming&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/meooow25/haccepted"&gt;Data structures and algorithms for competitive programming in Haskell&lt;/a&gt;. ~ Soumik Sarkar. #Haskell #FunctionalProgramming&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/HUkBz-cdB-k"&gt;Hardest problems in mathematics, physics &amp;amp; the future of AI&lt;/a&gt;. ~ Terence Tao, Lex Fridman. #ITP #LeanProver #AI #Math #AIforMath&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/qtVjx9mKVoE"&gt;Hablemos de LISP&lt;/a&gt;. ~ Manuel Rubio, Antonio Rubio. #Lisp #Programming&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/vestigium/posts/2025/06/15-hardest-problems-in-mathematics-physics-the-future-of-ai/"&gt;Reseña de «Hardest problems in mathematics, physics &amp;amp; the future of AI»&lt;/a&gt;. #ITP #LeanProver #AI #Math #AIforMath&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/vestigium/posts/2025/06/15-hablemos-de-lisp/"&gt;Reseña de «Hablemos de Lisp»&lt;/a&gt;. #Lisp #FunctionalProgramming&lt;/li&gt;
&lt;/ul&gt;</description><category>AI</category><category>AIforMath</category><category>CoqProver</category><category>FunctionalProgramming</category><category>Haskell</category><category>ITP</category><category>LeanProver</category><category>Lisp</category><category>Math</category><category>Programming</category><category>Rocq</category><guid>https://jaalonso.github.io/vestigium/posts/2025/06/16-readings_shared_06-15-25/</guid><pubDate>Mon, 16 Jun 2025 06:00:00 GMT</pubDate></item><item><title>Reseña de «Hardest problems in mathematics, physics &amp; the future of AI»</title><link>https://jaalonso.github.io/vestigium/posts/2025/06/15-hardest-problems-in-mathematics-physics-the-future-of-ai/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;En la entrevista "&lt;a href="https://youtu.be/HUkBz-cdB-k"&gt;Hardest problems in mathematics, physics &amp;amp; the future of AI&lt;/a&gt;", Terence Tao comparte sus reflexiones sobre diversos problemas
fundamentales sin resolver en análisis y teoría de números, examina la
metodología de la investigación matemática contemporánea y analiza el
papel emergente que desempeñan la verificación formal y la inteligencia
artificial en la disciplina.&lt;/p&gt;
&lt;h2&gt;Problemas fundamentales y sus complejidades intrínsecas&lt;/h2&gt;
&lt;p&gt;Tao examina varios problemas que se encuentran en la frontera del
conocimiento matemático actual. En análisis, dedica especial atención al
&lt;strong&gt;&lt;a href="https://en.wikipedia.org/wiki/Kakeya_set"&gt;problema de Kakeya&lt;/a&gt;&lt;/strong&gt;, destacando sus profundas conexiones con el
análisis armónico y las ecuaciones en derivadas parciales. Su análisis
revela cómo este problema aparentemente geométrico se entrelaza con
áreas fundamentales del análisis moderno.&lt;/p&gt;
&lt;p&gt;Respecto al &lt;strong&gt;&lt;a href="https://en.wikipedia.org/wiki/Navier%E2%80%93Stokes_equations"&gt;problema de la regularidad de Navier-Stokes&lt;/a&gt;&lt;/strong&gt;, Tao
identifica la "&lt;a href="https://goong.com/es/word/supercriticality-que-significa--traduccion/"&gt;supercriticalidad&lt;/a&gt;" como el obstáculo central que impide
su resolución. De manera particularmente innovadora, describe
&lt;a href="https://arxiv.org/pdf/1402.0290"&gt;su construcción teórica de un análogo
fluídico de una máquina de von Neumann&lt;/a&gt;, presentándola como una
estrategia prometedora para demostrar la existencia de explosiones en
tiempo finito (&lt;em&gt;blowup&lt;/em&gt;) en las soluciones de estas ecuaciones.&lt;/p&gt;
&lt;h2&gt;Desafíos en teoría de números&lt;/h2&gt;
&lt;p&gt;En el ámbito de la teoría de números, Tao analiza la &lt;strong&gt;&lt;a href="https://es.wikipedia.org/wiki/Conjetura_de_los_n%C3%BAmeros_primos_gemelos"&gt;conjetura de los
primos gemelos&lt;/a&gt;&lt;/strong&gt;, atribuyendo su persistente dificultad a la extrema
fragilidad del patrón subyacente. Explica cómo este patrón podría ser
destruido por "conspiraciones" matemáticas imperceptibles para los
métodos estadísticos tradicionales. Esta fragilidad contrasta
marcadamente con la robustez inherente de las progresiones aritméticas,
como las estudiadas en el &lt;a href="https://en.wikipedia.org/wiki/Green%E2%80%93Tao_theorem"&gt;teorema de Green-Tao&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Un concepto clave que emerge de su análisis es el &lt;a href="https://terrytao.wordpress.com/2007/06/05/open-question-the-parity-problem-in-sieve-theory/"&gt;problema de la
paridad&lt;/a&gt;*, que identifica como un obstáculo metodológico fundamental en
teoría de números. En cuanto a la &lt;a href="https://es.wikipedia.org/wiki/Hip%C3%B3tesis_de_Riemann"&gt;hipótesis de Riemann&lt;/a&gt;, Tao la
considera aún más inaccesible a los métodos actuales, situándola en una
categoría propia de dificultad.&lt;/p&gt;
&lt;h2&gt;Marco filosófico y metodológico&lt;/h2&gt;
&lt;p&gt;Un hilo conductor de la entrevista es la exploración de la &lt;strong&gt;dicotomía
entre estructura y aleatoriedad&lt;/strong&gt;, un tema que permea múltiples áreas de
las matemáticas. Esta perspectiva filosófica informa tanto el análisis
de problemas específicos como la comprensión general de los fenómenos
matemáticos.&lt;/p&gt;
&lt;p&gt;Metodológicamente, Tao defiende un enfoque de &lt;strong&gt;simplificación
estratégica&lt;/strong&gt; en la resolución de problemas. Su estrategia consiste en
descomponer problemas complejos en dificultades individuales, abordar
cada una por separado, y posteriormente integrar las soluciones. Este
método refleja una filosofía pragmática que prioriza la claridad
conceptual y el progreso incremental.&lt;/p&gt;
&lt;h2&gt;Transformación tecnológica de las matemáticas&lt;/h2&gt;
&lt;p&gt;Una porción sustancial de la discusión se centra en el impacto
transformador de la &lt;a href="https://en.wikipedia.org/wiki/Automated_reasoning"&gt;prueba asistida por ordenador&lt;/a&gt;, con particular
énfasis en el asistente de pruebas &lt;a href="https://en.wikipedia.org/wiki/Lean_(proof_assistant)"&gt;Lean&lt;/a&gt;. Tao ilustra su potencial a
través de su "&lt;a href="https://teorth.github.io/equational_theories/"&gt;Equational theories project&lt;/a&gt;" de clasificación de 22
millones de identidades algebraicas,
&lt;a href="https://terrytao.wordpress.com/wp-content/uploads/2025/06/math-experiments.pdf"&gt;demostrando
cómo estas herramientas facilitan la colaboración a gran escala y la
gestión de la complejidad en pruebas matemáticas modernas&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Sus predicciones sobre el futuro son especialmente significativas:
anticipa que las herramientas de inteligencia artificial &lt;strong&gt;revolucionarán
la formalización matemática&lt;/strong&gt;. Más ambiciosamente, prevé que la IA podría
generar conjeturas matemáticas genuinamente novedosas al identificar
conexiones profundas entre campos aparentemente dispares.&lt;/p&gt;
&lt;h2&gt;Síntesis y perspectiva&lt;/h2&gt;
&lt;p&gt;La entrevista proporciona una ventana excepcional al proceso intelectual
de uno de los matemáticos más influyentes de nuestra época. Tao logra
equilibrar la precisión técnica con la accesibilidad conceptual,
ofreciendo tanto análisis detallados de problemas específicos como
reflexiones más amplias sobre la naturaleza de la investigación
matemática.&lt;/p&gt;
&lt;p&gt;Su visión integra consideraciones técnicas, marcos filosóficos y
prospectivas tecnológicas, presentando una imagen completa de las
matemáticas como disciplina en constante evolución. La entrevista
destaca no solo los desafíos actuales, sino también las herramientas
emergentes que podrían redefinir fundamentalmente cómo se desarrollarán
las matemáticas en el futuro.&lt;/p&gt;</description><category>AI</category><category>AIforMath</category><category>ITP</category><category>LeanProver</category><category>Math</category><guid>https://jaalonso.github.io/vestigium/posts/2025/06/15-hardest-problems-in-mathematics-physics-the-future-of-ai/</guid><pubDate>Sun, 15 Jun 2025 10:00:00 GMT</pubDate></item><item><title>Readings shared June 13, 2025</title><link>https://jaalonso.github.io/vestigium/posts/2025/06/14-readings_shared_06-13-25/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;The readings shared in &lt;a href="https://bsky.app/profile/jalonso.bsky.social"&gt;Bluesky&lt;/a&gt; on 13 June 2025 are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2503.00959"&gt;Formalizing zeta and L-functions in Lean&lt;/a&gt;. ~ David Loeffler, Michael Stoll. #ITP #LeanProver #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="http://adam.chlipala.net/theses/teshome.pdf"&gt;Formal verification of relational algebra transformations in Fiat2 using Coq&lt;/a&gt;. ~ Christian Teshome. #ITP #CoqProver #Rocq&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2506.10048"&gt;Growing a modular framework for modal systems - HOLMS: a HOL Light library&lt;/a&gt;. ~ Antonella Bilotta. #ITP #HOL_Light #Logic #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.morph.so/blog/trinity"&gt;Trinity: an autoformalization system for verified superintelligence&lt;/a&gt;. #Autoformalization #AIforMath #ITP #LeanProver&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/morph-labs/lean-abc-true-almost-always"&gt;The abc conjecture almost always — autoformalized&lt;/a&gt;. ~ Jesse Michael Han et als. #Autoformalization #AIforMath #ITP #LeanProver&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2506.06034"&gt;MATP-BENCH: Can MLLM be a good automated theorem prover for multimodal problems?&lt;/a&gt; ~ Zhitao He et als. #AI #MLLMs #Math #ITP #IsabelleHOL #LeanProver #CoqProver #AIforMath&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2506.07047"&gt;Mathesis: Towards formal theorem proving from natural languages&lt;/a&gt;. ~ Yu Xuejun et als. #AI #LLMs #Math #ITP #LeanProver #AIforMath&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2506.10558"&gt;StepProof: Step-by-step verification of natural language mathematical proofs&lt;/a&gt;. ~ Xiaolin Hu, Qinghua Zhou, Bogdan Grechuk, Ivan Y. Tyukin. #LLMs #ITP #IsabelleHOL #Math #AIforMath&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/vestigium/posts/2025/06/13-resena-de-matp-bench-can-mllm-be-a-good-automated-theorem-prover-for-multimodal-problems/"&gt;Reseña de «MATP-BENCH: Can MLLM be a good automated theorem prover for multimodal problems?»&lt;/a&gt;. #AI #MLLMs #Math #ITP #IsabelleHOL #LeanProver #CoqProver #AIforMath&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/vestigium/posts/2025/06/13-resena-de-mathesis-towards-formal-theorem-proving-from-natural-languages/"&gt;Reseña de «Mathesis: Towards formal theorem proving from natural languages»&lt;/a&gt;. #AI #LLMs #Math #ITP #LeanProver #AIforMath&lt;/li&gt;
&lt;/ul&gt;</description><category>AI</category><category>AIforMath</category><category>Autoformalization</category><category>CoqProver</category><category>HOL_Light</category><category>IsabelleHOL</category><category>ITP</category><category>LeanProver</category><category>LLMs</category><category>Logic</category><category>Math</category><category>MLLMs</category><category>Rocq</category><guid>https://jaalonso.github.io/vestigium/posts/2025/06/14-readings_shared_06-13-25/</guid><pubDate>Sat, 14 Jun 2025 09:15:00 GMT</pubDate></item><item><title>Reseña de «Mathesis: Towards formal theorem proving from natural languages»</title><link>https://jaalonso.github.io/vestigium/posts/2025/06/13-resena-de-mathesis-towards-formal-theorem-proving-from-natural-languages/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;En el artículo «&lt;a href="https://arxiv.org/abs/2506.07047"&gt;Mathesis: Towards formal theorem proving from natural
languages&lt;/a&gt;», se aborda la limitación clave de los demostradores de
teoremas: su dependencia de enunciados ya formalizados. El trabajo se
centra en el paso crítico de la 'autoformalización' —la traducción a un
lenguaje formal como &lt;a href="https://en.wikipedia.org/wiki/Lean_(proof_assistant)"&gt;Lean 4&lt;/a&gt;— y presenta Mathesis, un sistema integral
diseñado para automatizar todo el proceso.&lt;/p&gt;
&lt;p&gt;El sistema introduce un Mathesis-Autoformalizer entrenado mediante
aprendizaje por refuerzo para optimizar la traducción a código Lean. Su
rendimiento se evalúa con LeanScorer, y se pone a prueba en
Gaokao-Formal, un nuevo y exigente banco de pruebas. Finalmente,
Mathesis-Prover genera la demostración completa en Lean, asegurando que
la prueba final sea verificable.&lt;/p&gt;
&lt;p&gt;Los resultados demuestran que Mathesis alcanza un rendimiento de
vanguardia en varios bancos de prueba. El análisis revela una conclusión
crucial: las mejoras en la autoformalización impactan el éxito final
mucho más que las mejoras en el demostrador. Esto se explica porque si
el problema se traduce incorrectamente a código Lean, el demostrador
recibe una tarea mal planteada y no puede generar una prueba válida, sin
importar su potencia. El trabajo confirma así que una traducción inicial
de alta calidad es el factor más determinante para el éxito del proceso.&lt;/p&gt;</description><category>AI</category><category>AIforMath</category><category>ITP</category><category>LeanProver</category><category>LLMs</category><category>Math</category><guid>https://jaalonso.github.io/vestigium/posts/2025/06/13-resena-de-mathesis-towards-formal-theorem-proving-from-natural-languages/</guid><pubDate>Fri, 13 Jun 2025 16:35:00 GMT</pubDate></item></channel></rss>
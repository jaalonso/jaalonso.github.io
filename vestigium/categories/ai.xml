<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Vestigium (Publicaciones sobre AI)</title><link>https://jaalonso.github.io/vestigium/</link><description></description><atom:link href="https://jaalonso.github.io/vestigium/categories/ai.xml" rel="self" type="application/rss+xml"></atom:link><language>es</language><copyright>Contents © 2025 &lt;a href="mailto:"&gt;José A. Alonso&lt;/a&gt; 
&lt;a rel="license" href="https://creativecommons.org/licenses/by-nc-sa/4.0/"&gt;
&lt;img alt="Creative Commons License BY-NC-SA"
style="border-width:0; margin-bottom:12px;"
src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"&gt;&lt;/a&gt;</copyright><lastBuildDate>Tue, 10 Jun 2025 11:59:15 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>AlphaProof - Aprendizaje por refuerzo aplicado a la demostración matemática.</title><link>https://jaalonso.github.io/vestigium/posts/2025/06/10-alphaproof-aprendiendo-a-razonar-matematicamente-mediante-prueba-y-error-a-gran-escala/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;The readings shared in &lt;a href="https://bsky.app/profile/jalonso.bsky.social"&gt;Bluesky&lt;/a&gt; on ?? June 2025 are
En su conferencia de ayer "&lt;a href="https://www.youtube.com/live/xZIqn4V6O0A"&gt;AlphaProof: When RL meets formal maths&lt;/a&gt;",
Thomas Hubert de Google DeepMind presentó &lt;a href="https://deepmind.google/discover/blog/ai-solves-imo-problems-at-silver-medal-level/"&gt;AlphaProof&lt;/a&gt;, un sistema de
inteligencia artificial que aplica los principios del &lt;a href="https://en.wikipedia.org/wiki/Reinforcement_learning"&gt;aprendizaje por
refuerzo&lt;/a&gt; (RL, del inglés "&lt;em&gt;Reinforcement learning&lt;/em&gt;") al dominio de las
matemáticas formales. El concepto fundamental radica en que los
asistentes de demostración como &lt;a href="https://en.wikipedia.org/wiki/Lean_(proof_assistant)"&gt;Lean&lt;/a&gt; proporcionan el entorno perfecto
para el RL: un espacio de experimentación masiva con retroalimentación
inequívoca (una prueba matemática es correcta o incorrecta, sin
ambigüedades). Siguiendo el paradigma exitoso de sistemas como AlphaGo
Zero, AlphaProof está diseñado para generar conocimiento matemático de
forma autónoma, trascendiendo la mera imitación de demostraciones
humanas preexistentes.&lt;/p&gt;
&lt;p&gt;La arquitectura de AlphaProof se estructura en un proceso de múltiples
fases que combina diferentes técnicas de aprendizaje
automático. Inicialmente, emplea modelos de lenguaje para autoformalizar
problemas matemáticos expresados en lenguaje natural hacia el código
formal de Lean, generando así un extenso conjunto de datos de
entrenamiento. Su modelo demostrador experimenta dos etapas: primero, un
entrenamiento supervisado utilizando la biblioteca &lt;a href="https://leanprover-community.github.io/mathlib-overview.html"&gt;mathlib&lt;/a&gt;, seguido de
un refinamiento intensivo mediante RL que resuelve millones de problemas
matemáticos. Para desafíos particularmente complejos —como los de la
Olimpiada Internacional de Matemáticas (IMO)—, el sistema implementa una
estrategia de adaptación en tiempo real, generando y resolviendo
múltiples variantes de un problema para desarrollar gradualmente la
intuición necesaria.&lt;/p&gt;
&lt;p&gt;Los resultados validan el potencial transformador de AlphaProof como
herramienta matemática colaborativa. El sistema alcanzó una puntuación
equivalente a una &lt;a href="https://deepmind.google/discover/blog/ai-solves-imo-problems-at-silver-medal-level/"&gt;medalla de plata en la IMO&lt;/a&gt; y, durante una demostración
en vivo durante la conferencia, asistió exitosamente a un matemático a
completar los pasos de una prueba compleja relacionada con la función
zeta de Riemann. Hubert enfatiza que el objetivo trasciende las
competiciones académicas: la meta fundamental es contribuir
significativamente a la investigación matemática contemporánea,
convirtiendo AlphaProof en una útil para la comunidad matemática que
facilite el descubrimiento y verificación de nuevas verdades
matemáticas.&lt;/p&gt;</description><category>AI</category><category>ITP</category><category>LeanProver</category><category>Math</category><category>RL</category><guid>https://jaalonso.github.io/vestigium/posts/2025/06/10-alphaproof-aprendiendo-a-razonar-matematicamente-mediante-prueba-y-error-a-gran-escala/</guid><pubDate>Tue, 10 Jun 2025 11:50:00 GMT</pubDate></item><item><title>Readings shared June 9, 2025</title><link>https://jaalonso.github.io/vestigium/posts/2025/06/09-readings_shared_06-09-25/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;The readings shared in &lt;a href="https://bsky.app/profile/jalonso.bsky.social"&gt;Bluesky&lt;/a&gt; on 9 June 2025 are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://emilyriehl.github.io/files/invisible.pdf"&gt;Formalizing invisible mathematics: case studies from higher category theory&lt;/a&gt;. ~ Emily Riehl. #ITP #LeanProver #Math #CategoryTheory&lt;/li&gt;
&lt;li&gt;&lt;a href="https://provables.github.io/sequencelib/"&gt;Sequencelib: A platform for formalizing in Lean 4 sequences from "The On-Line Encyclopedia of Integer Sequences" (OEIS)&lt;/a&gt;. ~ Walter Moreira, Joe Stubbs. #ITP #LeanProver #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.scientificamerican.com/article/inside-the-secret-meeting-where-mathematicians-struggled-to-outsmart-ai/"&gt;At secret math meeting, researchers struggle to outsmart AI&lt;/a&gt;. ~ Lyndie Chiou. #AIforMath #AI #LLMs #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mmhaskell.com/blog/2025/6/9/spatial-reasoning-with-zigzag-patterns"&gt;Comparing code: Spatial reasoning with zigzag patterns! ~ James Bowen&lt;/a&gt;. #Haskell #FunctionalProgramming #Rust&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/@kenichisasagawa/exploring-topological-spaces-with-prolog-a-practical-approach-using-mathematics-with-prolog-b5806bb8b98f"&gt;Exploring topological spaces with Prolog: A practical approach using "Mathematics with Prolog"&lt;/a&gt;. ~ Kenichi Sasagawa. #Prolog #LogicProgramming #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2108.09893"&gt;Teaching and learning mathematics with Prolog&lt;/a&gt;. ~ Tom Bensky (2021). #Prolog #LogicProgramming #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/vestigium/posts/2025/06/09-evaluando-la-ia-con-problemas-matematicos-ineditos-de-nivel-experto/"&gt;Evaluando la IA con problemas matemáticos inéditos de nivel experto&lt;/a&gt;. #AIforMath #AI #LLMs #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/cursos/li-12"&gt;Curso "Lógica informática (2012-13)"&lt;/a&gt;. #Lógica #ProgramaciónLógica #Prolog&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/cursos/lmf-12"&gt;Curso "Lógica matemática y fundamentos (2012-13)"&lt;/a&gt;. #Lógica #Haskell #ProgramaciónFuncional #Isabelle/HOL&lt;/li&gt;
&lt;/ul&gt;</description><category>AI</category><category>AIforMath</category><category>CategoryTheory</category><category>FunctionalProgramming</category><category>Haskell</category><category>IsabelleHOL</category><category>ITP</category><category>LeanProver</category><category>LLMs</category><category>Logic</category><category>LogicProgramming</category><category>Math</category><category>Prolog</category><category>Rust</category><guid>https://jaalonso.github.io/vestigium/posts/2025/06/09-readings_shared_06-09-25/</guid><pubDate>Tue, 10 Jun 2025 04:00:00 GMT</pubDate></item><item><title>Readings shared June 8, 2025</title><link>https://jaalonso.github.io/vestigium/posts/2025/06/08-readings_shared_06-08-25/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;The readings shared in &lt;a href="https://bsky.app/profile/jalonso.bsky.social"&gt;Bluesky&lt;/a&gt; on 8 June 2025 are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://ml-site.cdn-apple.com/papers/the-illusion-of-thinking.pdf"&gt;The illusion of thinking: Understanding the strengths and limitations of reasoning models via the lens of problem complexity&lt;/a&gt;. ~ Parshin Shojaee et als. #LLMs #Reasoning&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/vestigium/posts/2025/06/07-mas-alla-de-la-ilusion-de-pensar/"&gt;Más allá de la "ilusión de pensar"&lt;/a&gt;. #LLMs #Reasoning #Math #ITP #LeanProver&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/vestigium/posts/2025/06/08-autogps-un_sistema_neuro-simbolico-para-geometria/"&gt;AutoGPS: Un sistema neuro-simbólico para la geometría&lt;/a&gt;. #AI #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/cursos/i1m-12"&gt;Curso "Informática (2012-13)"&lt;/a&gt;. #Haskell #ProgramaciónFuncional #Algorítmica #CálculoSimbólico #Maxima&lt;/li&gt;
&lt;/ul&gt;</description><category>AI</category><category>Algorithms</category><category>CAS</category><category>FunctionalProgramming</category><category>Haskell</category><category>ITP</category><category>LeanProver</category><category>LLMs</category><category>Math</category><category>Maxima</category><category>Reasoning</category><guid>https://jaalonso.github.io/vestigium/posts/2025/06/08-readings_shared_06-08-25/</guid><pubDate>Sun, 08 Jun 2025 04:00:00 GMT</pubDate></item><item><title>AutoGPS - Un sistema neuro-simbólico para la geometría</title><link>https://jaalonso.github.io/vestigium/posts/2025/06/08-autogps-un_sistema_neuro-simbolico-para-geometria/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;El artículo &lt;a href="https://arxiv.org/pdf/2505.23381"&gt;AutoGPS: Automated Geometry Problem Solving via Multimodal
Formalization and Deductive Reasoning&lt;/a&gt;
presenta &lt;a href="https://jayce-ping.github.io/AutoGPS-homepage/"&gt;AutoGPS&lt;/a&gt;, un
sistema paradigmático para la geometría. Este trabajo aborda la
dicotomía fundamental entre los modelos neuronales, que destacan en la
interpretación multimodal pero carecen de fiabilidad lógica, y los
métodos simbólicos, que garantizan el rigor pero son ineficaces para
formalizar problemas a partir de entradas complejas. AutoGPS resuelve
este dilema mediante un marco neuro-simbólico: un &lt;strong&gt;formalizador de
problemas multimodales&lt;/strong&gt; (MPF) traduce la entrada visual y textual a un
lenguaje lógico, sobre el cual opera un &lt;strong&gt;razonador simbólico
deductivo&lt;/strong&gt; (DSR) para derivar la solución.&lt;/p&gt;
&lt;p&gt;La innovación crucial reside en la interacción bidireccional entre ambos
componentes. El DSR no se limita a resolver el problema formalizado,
sino que actúa como un verificador, validando la interpretación del MPF
y pudiendo solicitarle correcciones. Este bucle de retroalimentación
garantiza la consistencia lógica de todo el proceso, fusionando la
capacidad heurística del modelo neuronal con el rigor inflexible del
razonamiento deductivo.&lt;/p&gt;
&lt;p&gt;Como resultado, AutoGPS establece un nuevo estado del arte en los
benchmarks de referencia, produciendo derivaciones que no solo son
correctas, sino también concisas y legibles para un humano. De este
modo, redefine el estándar de fiabilidad e interpretabilidad en la
resolución automática de problemas matemáticos. La &lt;a href="https://jayce-ping.github.io/AutoGPS-homepage/"&gt;página del proyecto&lt;/a&gt;
ofrece ejemplos ilustrativos de su funcionamiento.&lt;/p&gt;</description><category>AI</category><category>Math</category><guid>https://jaalonso.github.io/vestigium/posts/2025/06/08-autogps-un_sistema_neuro-simbolico-para-geometria/</guid><pubDate>Sun, 08 Jun 2025 03:00:00 GMT</pubDate></item><item><title>Readings shared June 5, 2025</title><link>https://jaalonso.github.io/vestigium/posts/2025/06/05-readings_shared_06-05-25/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;The readings shared in &lt;a href="https://bsky.app/profile/jalonso.bsky.social"&gt;Bluesky&lt;/a&gt; on 5 June 2025 are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://b-mehta.github.io/ABC-Exceptions/"&gt;Exceptional set in the abc conjecture (in Lean)&lt;/a&gt;. ~ Jared Duker Lichtman, Bhavik Mehta. #ITP #LeanProver #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.atlascomputing.org/p/ide-for-validating-specifications"&gt;IDE for validating specifications&lt;/a&gt;. ~ Evan Miyazono, Daniel Windham, Alexandre Rademaker. #ITP #LeanProver&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.isa-afp.org/entries/FaithfulPMLinHOL.html"&gt;Faithful logic embeddings in HOL — Deep and shallow (Isabelle/HOL dataset)&lt;/a&gt;. ~ Christoph Benzmüller. #ITP #IsabelleHOL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.isa-afp.org/entries/MLSSmf_to_MLSS.html"&gt;A verified reduction algorithm from MLSSmf to MLSS&lt;/a&gt;. ~ Yiran Duan, Lukas Stevens. #ITP #IsabelleHOL #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/9bb9QzxEKWo"&gt;David Poole on knowledge graphs and relational learning&lt;/a&gt;. #AI #LogicProgramming&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/vestigium/posts/2025/06/05-ia_y_matematicas-presente_y_futuro/"&gt;IA y matemáticas (presente y futuro)&lt;/a&gt;. #IA #Matemáticas&lt;/li&gt;
&lt;/ul&gt;</description><category>AI</category><category>IsabelleHOL</category><category>ITP</category><category>LeanProver</category><category>LogicProgramming</category><category>Math</category><guid>https://jaalonso.github.io/vestigium/posts/2025/06/05-readings_shared_06-05-25/</guid><pubDate>Thu, 05 Jun 2025 04:00:00 GMT</pubDate></item><item><title>Readings shared June 3, 2025</title><link>https://jaalonso.github.io/vestigium/posts/2025/06/03-readings_shared_06-03-25/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;The readings shared in &lt;a href="https://bsky.app/profile/jalonso.bsky.social"&gt;Bluesky&lt;/a&gt; on 3 June 2025 are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://youtu.be/mSbf7IoI0ak"&gt;Project Numina and AI for Theorem Proving&lt;/a&gt;. ~ Yann Fleureau. #AI #Math #ITP #LeanProver&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.isa-afp.org/entries/Restriction_Spaces.html"&gt;Restriction spaces: a fixed-point theory (in Isabelle/HOL)&lt;/a&gt;. ~ Benoît Ballenghienm, Benjamin Puyobro, Burkhart Wolff. #ITP #IsabelleHOL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2506.00224"&gt;Automated symmetric constructions in discrete geometry&lt;/a&gt;. ~ Bernardo Subercaseaux, Ethan Mackey, Long Qian, Marijn J. H. Heule. #ATP #SAT_Solvers #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2506.01711"&gt;Coalgebraic proof translations for non-wellfounded proofs&lt;/a&gt;. ~ Borja Sierra Miranda, Thomas Studer, Lukas Zenger. #Logic #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gnarledgrip.gitlab.io/25-emacs-tips.html"&gt;25 Useful tips for Emacs (for beginners and advanced users)&lt;/a&gt;. ~ Raoul Comninos. #Emacs&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/vestigium/posts/2025/06/03-debate-sobre-ia-y-ensenanza-de-las-matematicas/"&gt;Debate sobre IA y enseñanza de las matemáticas&lt;/a&gt;. #IA #Matemáticas&lt;/li&gt;
&lt;/ul&gt;</description><category>AI</category><category>ATP</category><category>Emacs</category><category>IsabelleHOL</category><category>ITP</category><category>LeanProver</category><category>Logic</category><category>Math</category><category>SAT_Solvers</category><guid>https://jaalonso.github.io/vestigium/posts/2025/06/03-readings_shared_06-03-25/</guid><pubDate>Tue, 03 Jun 2025 04:00:00 GMT</pubDate></item><item><title>Readings shared May 29, 2025</title><link>https://jaalonso.github.io/vestigium/posts/2025/05/29-readings_shared_05-29-25/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;The readings shared in &lt;a href="https://bsky.app/profile/jalonso.bsky.social"&gt;Bluesky&lt;/a&gt; on 29 May 2025 are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://msp.cis.strath.ac.uk/types2025/abstracts/TYPES2025_paper49.pdf"&gt;Geometric reasoning in Lean: from algebraic structures to presheaves&lt;/a&gt;. ~ Kenji Maillard, Yiming Xu. #ITP #LeanProver #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://interstices.info/construire-des-preuves-mathematiques/"&gt;Construire des preuves mathématiques&lt;/a&gt;. ~  Thierry Coquand, William Rowe-Pirra. #ITP #Coq&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2503.20704"&gt;Formalizing colimits in Cat&lt;/a&gt;. ~ Mario Carneiro, Emily Riehl. #ITP #LeanProver&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/google-deepmind/formal-conjectures"&gt;A collection of formalized statements of conjectures in Lean, using Mathlib&lt;/a&gt;. #ITP #LeanProver #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2505.19816"&gt;A formal analysis of algorithms for matroids and greedoids&lt;/a&gt;. ~ Mohammad Abdulaziz, Thomas Ammer, Shriya Meenakshisundaram, Adem Rimpapa. #ITP #IsabelleHOL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://demo.projectnumina.ai/"&gt;Kimina: Interactive mathematical proof assistant&lt;/a&gt;. #AI #ITP #LeanProver #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.isa-afp.org/entries/Context_Free_Grammar.html"&gt;Context-free grammars and languages (in Isabelle/HOL)&lt;/a&gt;. ~ Tobias Nipkow et als. #ITP #IsabelleHOL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2409.02603"&gt;Formalising inductive and coinductive containers&lt;/a&gt;. ~ Stefania Damato, Thorsten Altenkirch, Axel Ljungström. #ITP #Agda&lt;/li&gt;
&lt;li&gt;&lt;a href="https://msp.cis.strath.ac.uk/types2025/abstracts/TYPES2025_paper79.pdf"&gt;Mechanized safety of Jolteon consensus in Agda&lt;/a&gt;. ~ Orestis Melkonian, Mauro Jaskelioff, and James Chapman. #ITP #Agda&lt;/li&gt;
&lt;li&gt;&lt;a href="https://newartisans.com/2025/05/implementing-loeb-emacs-lisp/"&gt;Implementing Löb’s theorem in Emacs Lisp&lt;/a&gt;. ~ John Wiegley. #Emacs #Lisp #Logic #Math&lt;/li&gt;
&lt;/ul&gt;</description><category>Agda</category><category>AI</category><category>Coq</category><category>Emacs</category><category>IsabelleHOL</category><category>ITP</category><category>LeanProver</category><category>Lisp</category><category>Logic</category><category>Math</category><guid>https://jaalonso.github.io/vestigium/posts/2025/05/29-readings_shared_05-29-25/</guid><pubDate>Thu, 29 May 2025 04:00:00 GMT</pubDate></item><item><title>Readings shared May 28, 2025</title><link>https://jaalonso.github.io/vestigium/posts/2025/05/28-readings_shared_05-28-25/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;The readings shared in &lt;a href="https://bsky.app/profile/jalonso.bsky.social"&gt;Bluesky&lt;/a&gt; on 28 May 2025 are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://youtu.be/-o29xda8O3g"&gt;Formalizing Fermat: an update&lt;/a&gt;. ~ Kevin Buzzard. #ITP #LeanProver #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/fzMPusl30-k"&gt;Algebraic geometry in Mathlib&lt;/a&gt;. ~ Andrew Yang. #ITP #LeanProver #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2505.20613"&gt;REAL-Prover: Retrieval augmented Lean prover for mathematical reasoning&lt;/a&gt;. ~ Ziju Shen et als. #AI #TheoremProving #LeanProver #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2502.19311"&gt;Faithful logic embeddings in HOL (Deep and shallow)&lt;/a&gt;. ~ Christoph Benzmüller. #ITP #TheoremProving #IsabelleHOL #Logic #Math&lt;/li&gt;
&lt;/ul&gt;</description><category>AI</category><category>IsabelleHOL</category><category>ITP</category><category>LeanProver</category><category>Logic</category><category>Math</category><guid>https://jaalonso.github.io/vestigium/posts/2025/05/28-readings_shared_05-28-25/</guid><pubDate>Wed, 28 May 2025 04:00:00 GMT</pubDate></item><item><title>Readings shared May 21, 2025</title><link>https://jaalonso.github.io/vestigium/posts/2025/05/21-readings_shared_05-21-25/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;The readings shared in &lt;a href="https://bsky.app/profile/jalonso.bsky.social"&gt;Bluesky&lt;/a&gt; on 21 May 2025 are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://youtu.be/LylJBfvVzyw"&gt;Will computers prove theorems?&lt;/a&gt; ~ Kevin Buzzard. #ITP #LeanProver #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/aF7IIWfXh3A"&gt;Formalizing the future: Lean’s impact on mathematics, programming, and AI&lt;/a&gt;. ~ Leo De Moura. #ITP #LeanProver #Math #CompSci #AI&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ankitku.github.io/stuff/floodsub-acl2ws.pdf"&gt;A formalization of the correctness of the Floodsub protocol&lt;/a&gt;. ~ Ankit Kumar, Panagiotis Manolios. #ITP #ACL2&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/codelion/openevolve"&gt;OpenEvolve: Open-source implementation of AlphaEvolve&lt;/a&gt;. ~ Asankhaya Sharma. #AI #LLMs #AlphaEvolve #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/PhialsBasement/AlphaEvolve-MatrixMul-Verification"&gt;AlphaEvolveVerify: Verification of Google DeepMind's AlphaEvolve 48-multiplication matrix algorithm&lt;/a&gt;. ~ Deming Xu. #Python #Programming #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/of92m4XNgrM"&gt;Toward safe, flexible, and efficient software in Common Lisp&lt;/a&gt;. ~ Robert Smith. #CommonLisp&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.researchgate.net/publication/391802524_Theorems_and_Conjectures_with_Python"&gt;Theorems and conjectures with Python&lt;/a&gt;. ~ Alessio Drivet. #Math #Python #Programming&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.researchgate.net/publication/391837654_Analysis_of_selection_noise_in_genetic_algorithms"&gt;Analysis of selection noise in genetic algorithms&lt;/a&gt;. Nataliya M. Gulayeva, Joaquín Borrego-Díaz, Fernando Sancho-Caparrini. #GeneticAlgoritm&lt;/li&gt;
&lt;li&gt;&lt;a href="https://gitlab.com/purlupar/org-expex"&gt;org-expex: Expex glosses in Org-mode (Emacs org-mode extension to auto-create linguistic glosses)&lt;/a&gt;. ~ David Diem. #Emacs #OrgMode&lt;/li&gt;
&lt;/ul&gt;</description><category>ACL2</category><category>AI</category><category>AlphaEvolve</category><category>CommonLisp</category><category>CompSci</category><category>Emacs</category><category>GeneticAlgoritm</category><category>ITP</category><category>LeanProver</category><category>LLMs</category><category>Math</category><category>OrgMode</category><category>Programming</category><category>Python</category><guid>https://jaalonso.github.io/vestigium/posts/2025/05/21-readings_shared_05-21-25/</guid><pubDate>Wed, 21 May 2025 04:00:00 GMT</pubDate></item><item><title>Readings shared May 17, 2025</title><link>https://jaalonso.github.io/vestigium/posts/2025/05/17-readings_shared_05-17-25/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;The readings shared in &lt;a href="https://bsky.app/profile/jalonso.bsky.social"&gt;Bluesky&lt;/a&gt; on 17 May 2025 are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://podcasts.ox.ac.uk/formalizing-future-leans-impact-mathematics-programming-and-ai"&gt;Formalizing the future: Lean’s impact on mathematics, programming, and AI&lt;/a&gt;. ~ Leo De Moura. #ITP #LeanProver #Math #CompSci #AI&lt;/li&gt;
&lt;li&gt;&lt;a href="https://podcasts.ox.ac.uk/will-computers-prove-theorems"&gt;Will computers prove theorems?&lt;/a&gt; ~ Kevin Buzzard. #ITP #LeanProver #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://bobkonf.de/2025/breitner.html"&gt;Recursive definitions in Lean&lt;/a&gt;. ~ Joachim Breitner. #ITP #LeanProver #FunctionalProgramming&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2505.07939"&gt;Digitalizing Wick's theorem&lt;/a&gt;. ~ Joseph Tooby-Smith. #ITP #LeanProver&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/live/RPQVsaZ46Dk"&gt;The Haskell Unfolder Episode 44: State-based testing with quickcheck-lockstep&lt;/a&gt;. ~ Edsko de Vries, Andres Löh. #Haskell #FunctionalProgramming&lt;/li&gt;
&lt;/ul&gt;</description><category>AI</category><category>CompSci</category><category>FunctionalProgramming</category><category>Haskell</category><category>ITP</category><category>LeanProver</category><category>Math</category><guid>https://jaalonso.github.io/vestigium/posts/2025/05/17-readings_shared_05-17-25/</guid><pubDate>Sat, 17 May 2025 04:00:00 GMT</pubDate></item></channel></rss>
<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Vestigium (Publicaciones sobre Reseña)</title><link>https://jaalonso.github.io/vestigium/</link><description></description><atom:link href="https://jaalonso.github.io/vestigium/categories/cat_resena.xml" rel="self" type="application/rss+xml"></atom:link><language>es</language><copyright>Contents © 2025 &lt;a href="mailto:"&gt;José A. Alonso&lt;/a&gt; 
&lt;a rel="license" href="https://creativecommons.org/licenses/by-nc-sa/4.0/"&gt;
&lt;img alt="Creative Commons License BY-NC-SA"
style="border-width:0; margin-bottom:12px;"
src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"&gt;&lt;/a&gt;</copyright><lastBuildDate>Wed, 13 Aug 2025 11:38:43 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Reseña de «The Infinity Project (How to use AI and mathematics to prove and improve science and security)»</title><link>https://jaalonso.github.io/vestigium/posts/2025/08/13-the-infinity-project/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;En el artículo &lt;a href="https://ifp.org/the-infinity-project/"&gt;«The Infinity Project (How to use AI and mathematics to prove and improve science and security)»&lt;/a&gt; se propone invertir 112,5 MUSD en un concurso entre institutos de matemáticas para formalizar el conocimiento matemático en programas verificables. Con IA y lenguajes como Lean, se busca traducir y validar pruebas, democratizando el acceso a las matemáticas.&lt;/p&gt;
&lt;p&gt;El objetivo es aplicar esta infraestructura para aumentar el rigor científico y reforzar la ciberseguridad. Formalizar teorías y procesos permitiría optimizar la investigación, prevenir fallos en sistemas críticos y reducir vulnerabilidades, con beneficios económicos y sociales significativos.&lt;/p&gt;
&lt;p&gt;El plan incluye crear una amplia biblioteca matemática, entrenar IA para generar nuevo conocimiento útil y mostrar aplicaciones prácticas. Se plantea una colaboración entre academia, industria y gobiernos, con el potencial de abrir nuevas industrias y transformar ciencia, tecnología y seguridad.&lt;/p&gt;</description><guid>https://jaalonso.github.io/vestigium/posts/2025/08/13-the-infinity-project/</guid><pubDate>Wed, 13 Aug 2025 10:00:00 GMT</pubDate></item><item><title>Reseña de «Solving formal math problems by decomposition and iterative reflection»</title><link>https://jaalonso.github.io/vestigium/posts/2025/07/27-solving-formal-math-problems-by-decomposition-and-iterative-reflection/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;El artículo &lt;a href="https://arxiv.org/abs/2507.15225v1"&gt;«Solving formal math problems by decomposition and iterative
reflection»&lt;/a&gt; presenta &lt;a href="https://github.com/ByteDance-Seed/Seed-Prover/tree/main/DeltaProver"&gt;Delta Prover&lt;/a&gt;, un nuevo sistema que resuelve
problemas matemáticos complejos. Este agente utiliza un LLM que
interactúa con el asistente de pruebas &lt;a href="https://en.wikipedia.org/wiki/Lean_(proof_assistant)"&gt;Lean 4&lt;/a&gt;. Mediante una
descomposición de problemas y una reparación iterativa de las pruebas,
el sistema aprende de los errores para construir demostraciones
verificables. Alcanza un rendimiento del 95.9% de éxito en los problemas
de &lt;a href="https://github.com/openai/miniF2F"&gt;miniF2F&lt;/a&gt;, superando a otros métodos sin necesitar un costoso
reentrenamiento del modelo.&lt;/p&gt;</description><category>LeanProveer</category><category>LLMs</category><guid>https://jaalonso.github.io/vestigium/posts/2025/07/27-solving-formal-math-problems-by-decomposition-and-iterative-reflection/</guid><pubDate>Sun, 27 Jul 2025 10:00:00 GMT</pubDate></item><item><title>Reseña de «LeanConjecturer: Automatic generation of mathematical conjectures for theorem proving»</title><link>https://jaalonso.github.io/vestigium/posts/2025/07/04-leanconjecturer-automatic-generation-of-mathematical-conjectures-for-theorem-proving/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;El campo de la demostración automática de teoremas se enfrenta a un
obstáculo fundamental: a pesar del enorme potencial de los modelos de
lenguaje para el razonamiento matemático, su progreso se ve frenado por
la drástica escasez de datos de entrenamiento formales y de alta
calidad. A diferencia de los vastos corpus de texto general, las
bibliotecas matemáticas como &lt;a href="https://leanprover-community.github.io/mathlib-overview.html"&gt;Mathlib&lt;/a&gt; son relativamente pequeñas, lo que
limita la capacidad de estos sistemas para aprender y mejorar.&lt;/p&gt;
&lt;p&gt;Para resolver este desafío, en el artículo &lt;a href="https://arxiv.org/pdf/2506.22005"&gt;LeanConjecturer: Automatic
generation of mathematical conjectures for theorem
proving&lt;/a&gt; se presenta una innovadora metodología para generar nuevas
conjeturas de manera automática. El sistema adopta un enfoque híbrido:
primero, extrae el contexto matemático (definiciones, variables) de un
archivo de &lt;a href="https://en.wikipedia.org/wiki/Lean_(proof_assistant)"&gt;Lean&lt;/a&gt; existente, y luego utiliza un modelo de lenguaje
exclusivamente para la tarea creativa de proponer nuevos enunciados de
teoremas. Estas propuestas se someten a un proceso de filtrado iterativo
para garantizar que sean sintácticamente correctas, novedosas y no
triviales, alimentando las conjeturas válidas de nuevo al sistema para
inspirar generaciones futuras cada vez más complejas.&lt;/p&gt;
&lt;p&gt;El resultado es un éxito rotundo: el sistema no solo logra generar miles
de conjeturas válidas y desafiantes, sino que demuestra su utilidad
práctica al ser utilizadas para entrenar y mejorar el rendimiento de un
demostrador de teoremas de vanguardia. Más allá de simplemente crear
datos, LeanConjecturer fue capaz de formular y verificar teoremas
genuinamente interesantes en el campo de la topología, estableciendo
nuevas conexiones entre conceptos matemáticos. Con ello, el proyecto no
solo ofrece una solución escalable al problema de la escasez de datos,
sino que también abre una prometedora vía hacia la colaboración entre
humanos y máquinas en el descubrimiento de nuevas matemáticas.&lt;/p&gt;</description><category>ITP</category><category>LeanProver</category><category>LLMs</category><guid>https://jaalonso.github.io/vestigium/posts/2025/07/04-leanconjecturer-automatic-generation-of-mathematical-conjectures-for-theorem-proving/</guid><pubDate>Fri, 04 Jul 2025 09:00:00 GMT</pubDate></item><item><title>Reseña de «Diophantine equations over Z: Universal bounds and parallel formalization»</title><link>https://jaalonso.github.io/vestigium/posts/2025/07/01-diophantine-equations-over-z-universal-bounds-and-parallel-formalization/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;Ayer se publicó un artículo que muestra el uso de la formalización con
Isabelle en el desarrollo de la investigación matemática. Su título
es &lt;a href="https://arxiv.org/pdf/2506.20909v2"&gt;Diophantine equations over Z: Universal bounds and parallel
formalization&lt;/a&gt; y en sus conclusiones dice:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Nuestro proyecto demuestra que formalizar matemáticas altamente técnicas
puede brindar beneficios reales, corrigiendo muchos errores mientras
mejora la claridad y fiabilidad. El tiempo y esfuerzo adicional
requeridos no pueden ignorarse, pero quedan compensados por las ventajas
aquí expuestas.&lt;/p&gt;
&lt;p&gt;En retrospectiva, identificamos dos factores clave que contribuyeron al
éxito de este proyecto. En primer lugar, fue crucial apoyarnos en
nuestra experiencia previa formalizando el ya consolidado teorema DPRM
para tomar decisiones importantes en este proyecto. A quienes estén
interesados en formalizar sus matemáticas, les recomendamos comenzar con
un proyecto más pequeño cuyo objetivo sea formalizar un teorema ya
establecido. En segundo lugar, fue de gran ayuda contar con un equipo
interdisciplinario de personas con distintas habilidades. En nuestro
caso, esto incluyó tanto a matemáticos puros como a informáticos, y fue
su esfuerzo conjunto lo que permitió tender un puente desde las pruebas
en lenguaje natural hasta el metalenguaje en el que está programado el
propio Isabelle.&lt;/p&gt;
&lt;p&gt;Fomentar que los matemáticos integren asistentes de prueba en su flujo
de trabajo ahora ayudará a moldear el desarrollo de herramientas
mejores, haciendo que la formalización en sistemas como Isabelle o Lean
llegue a ser tan fluida como escribir en LaTeX. Esto se ve reforzado por
los recientes avances en IA, que sugieren que pronto podrían surgir
potentes herramientas de automatización para la formalización. Al
formalizar las matemáticas ahora, aseguramos que nuestros campos se
beneficien de la IA y la automatización a medida que estas herramientas
evolucionen.&lt;/p&gt;
&lt;/blockquote&gt;</description><category>IsabelleHOL</category><category>ITP</category><guid>https://jaalonso.github.io/vestigium/posts/2025/07/01-diophantine-equations-over-z-universal-bounds-and-parallel-formalization/</guid><pubDate>Tue, 01 Jul 2025 16:00:00 GMT</pubDate></item><item><title>Lean obtiene el prestigioso «SIGPLAN Programming Languages Software Award 2025»</title><link>https://jaalonso.github.io/vestigium/posts/2025/06/20-lean-ha-ganado-el-sigplan-programming-languages-software-award-2025/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;El &lt;a href="https://en.wikipedia.org/wiki/Lean_(proof_assistant)"&gt;demostrador de teoremas Lean&lt;/a&gt; ha sido galardonado con el &lt;a href="https://www.sigplan.org/Awards/Software/#2025_Lean_Theorem_Prover"&gt;«SIGPLAN
Programming Languages Software Award 2025»&lt;/a&gt;, otorgado por &lt;a href="https://www.sigplan.org/"&gt;ACM SIGPLAN&lt;/a&gt;
(Special Interest Group on Programming Languages de la
&lt;a href="https://www.sigplan.org/"&gt;ACM (Association for Computing Machinery)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;La cita del premio destaca lo siguiente:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;El demostrador de teoremas Lean constituye un sistema informático
extraordinario. Fundamentado en sólidas bases teóricas y de ingeniería,
Lean ha ejercido y continúa ejerciendo un amplio impacto tanto en la
práctica industrial como en la investigación científica.&lt;/p&gt;
&lt;p&gt;El proyecto Lean ha generado un impacto particularmente significativo en
tres áreas clave: matemáticas, verificación de hardware y software, e
inteligencia artificial. En el ámbito matemático, ha logrado una
aceptación considerable dentro de la comunidad académica, evidenciada
por el desarrollo de &lt;a href="https://leanprover-community.github.io/mathlib-overview.html"&gt;Mathlib&lt;/a&gt;, una biblioteca creada por usuarios que
supera las 1.8 millones de líneas de código.&lt;/p&gt;
&lt;p&gt;La credibilidad del sistema se ha consolidado mediante la verificación
exitosa de resultados fundamentales, incluyendo &lt;a href="https://github.com/leanprover-community/lean-liquid?tab=readme-ov-file"&gt;Liquid Tensor Experiment&lt;/a&gt;
(propuesto por el medallista Fields &lt;a href="https://es.wikipedia.org/wiki/Peter_Scholze"&gt;Peter Scholze&lt;/a&gt;) y la verificación de
la &lt;a href="https://teorth.github.io/pfr//"&gt;conjetura polinomial de Freiman-Ruzsa&lt;/a&gt; dirigida por el medallista
Fields &lt;a href="https://es.wikipedia.org/wiki/Terence_Tao"&gt;Terence Tao&lt;/a&gt;. Estos logros han proporcionado al sistema un
reconocimiento sin precedentes en la comunidad científica internacional.&lt;/p&gt;
&lt;p&gt;Es indiscutible que los métodos formales basados en Lean ocuparán una
posición central en el desarrollo de las matemáticas durante los
próximos años. Paralelamente, el sistema ha demostrado su valor práctico
en proyectos industriales de verificación críticos, tales como la
verificación del lenguaje de control de acceso &lt;a href="https://aws.amazon.com/es/about-aws/whats-new/2023/05/cedar-open-source-language-access-control/"&gt;Cedar&lt;/a&gt; en &lt;a href="https://aws.amazon.com/es/what-is-aws/"&gt;Amazon Web
Services&lt;/a&gt;, la validación del muestreador &lt;a href="https://github.com/leanprover/SampCert"&gt;SampCert&lt;/a&gt; para privacidad
diferencial (también en AWS), y diversos proyectos de verificación
blockchain en empresas líderes como &lt;a href="https://starkware.co/"&gt;StarkWare&lt;/a&gt; y &lt;a href="https://www.nethermind.io/"&gt;Nethermind&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Finalmente, el éxito de iniciativas como &lt;a href="https://deepmind.google/discover/blog/ai-solves-imo-problems-at-silver-medal-level/"&gt;AlphaProof&lt;/a&gt; de &lt;a href="https://deepmind.google/"&gt;DeepMind&lt;/a&gt; y la
adopción estratégica de Lean por parte de empresas emergentes como
&lt;a href="https://harmonic.fun/index"&gt;Harmonic&lt;/a&gt; han consolidado su posición como la solución de referencia para
sistemas de razonamiento matemático potenciados por inteligencia
artificial.&lt;/p&gt;
&lt;/blockquote&gt;</description><category>ITP</category><category>LeanProver</category><guid>https://jaalonso.github.io/vestigium/posts/2025/06/20-lean-ha-ganado-el-sigplan-programming-languages-software-award-2025/</guid><pubDate>Fri, 20 Jun 2025 12:00:00 GMT</pubDate></item><item><title>Reseña de «Can A.I. quicken the pace of math discovery?»</title><link>https://jaalonso.github.io/vestigium/posts/2025/06/19-can-ai-quicken-the-pace-of-math-discovery/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;El artículo «&lt;a href="https://www.nytimes.com/2025/06/19/science/math-ai-darpa.html"&gt;Can A.I. quicken the pace of math discovery?&lt;/a&gt;» presenta la
iniciativa "&lt;a href="https://www.darpa.mil/research/programs/expmath-exponential-mathematics"&gt;Exponentiating Mathematics&lt;/a&gt;" de DARPA. Su objetivo es
desarrollar una IA como coautor para acelerar la investigación en
matemáticas.&lt;/p&gt;
&lt;p&gt;El programa confronta limitaciones de los LLMs actuales. Estos fallan en
razonamiento lógico-matemático y generan "alucinaciones". La
solución propuesta integra IA con asistentes de prueba formales como
&lt;a href="https://en.wikipedia.org/wiki/Lean_(proof_assistant)"&gt;Lean&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Lean_(proof_assistant)"&gt;Lean&lt;/a&gt; desempeña el papel central como verificador. Los LLMs generan
pruebas formales que Lean acepta o rechaza según su corrección. Esta
iteración crea un ciclo de refinamiento continuo. Su lenguaje específico
resulta arduo, pero su metodología es fundamental. La verificación
formal garantiza corrección absoluta y elimina alucinaciones de LLMs
generativos.&lt;/p&gt;
&lt;p&gt;La meta es crear IA que sugiera ideas y construya pruebas
verificadas. Los sistemas formales garantizan fiabilidad absoluta. Esto
transforma herramientas actuales en colaboradores matemáticos
confiables.&lt;/p&gt;</description><category>AI</category><category>ITP</category><category>LeanProver</category><category>Math</category><guid>https://jaalonso.github.io/vestigium/posts/2025/06/19-can-ai-quicken-the-pace-of-math-discovery/</guid><pubDate>Thu, 19 Jun 2025 15:00:00 GMT</pubDate></item><item><title>Reseña de «Hablemos de Lisp»</title><link>https://jaalonso.github.io/vestigium/posts/2025/06/15-hablemos-de-lisp/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;El vídeo «&lt;a href="https://youtu.be/qtVjx9mKVoE"&gt;Hablemos de Lisp&lt;/a&gt;» presenta un diálogo que explora la historia,
conceptos fundamentales y legado duradero del lenguaje de programación
&lt;a href="https://es.wikipedia.org/wiki/Lisp"&gt;Lisp&lt;/a&gt;. El análisis comienza con una perspectiva histórica rigurosa,
desmitificando la creencia común de que fue el primer &lt;a href="https://es.wikipedia.org/wiki/Programaci%C3%B3n_funcional"&gt;lenguaje
funcional&lt;/a&gt;. En su lugar, identifica al &lt;a href="https://en.wikipedia.org/wiki/Information_Processing_Language"&gt;IPL (Information Processing
Language)&lt;/a&gt; de &lt;a href="https://en.wikipedia.org/wiki/Herbert_A._Simon"&gt;Herbert Simon&lt;/a&gt; y &lt;a href="https://en.wikipedia.org/wiki/Allen_Newell"&gt;Allen Newell&lt;/a&gt; como su precursor
fundamental.&lt;/p&gt;
&lt;h2&gt;Contexto histórico y pioneros&lt;/h2&gt;
&lt;p&gt;El vídeo establece una distinción crucial entre los diferentes pioneros
de la &lt;a href="https://en.wikipedia.org/wiki/Artificial_intelligence"&gt;inteligencia artificial&lt;/a&gt;: mientras que Simon y Newell sentaron las
bases conceptuales del campo, &lt;a href="https://en.wikipedia.org/wiki/John_McCarthy_(computer_scientist)"&gt;John McCarthy&lt;/a&gt; acuñó el término
"inteligencia artificial" y creó LISP, inspirado precisamente por las
capacidades de procesamiento de listas que había demostrado IPL.&lt;/p&gt;
&lt;h2&gt;La naturaleza funcional de LISP&lt;/h2&gt;
&lt;p&gt;Respecto al &lt;a href="https://en.wikipedia.org/wiki/Functional_programming"&gt;paradigma funcional&lt;/a&gt;, el análisis revela que LISP, en sus
primeras etapas, no cumplía estrictamente con los principios de la
programación funcional moderna, como la inmutabilidad y la gestión
explícita de efectos secundarios. La formalización teórica de este
paradigma se atribuye posteriormente a la familia de lenguajes &lt;a href="https://en.wikipedia.org/wiki/ISWIM"&gt;ISWIM&lt;/a&gt;,
propuesta por &lt;a href="https://en.wikipedia.org/wiki/Peter_Landin"&gt;Peter Landin&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Evolución técnica y conceptual&lt;/h2&gt;
&lt;p&gt;La génesis de la implementación de LISP se sigue de &lt;a href="https://justine.lol/sectorlisp/flpl-the-lisp-competitor.pdf"&gt;FLPL (Fortran Lisp
Processing Language)&lt;/a&gt;, un lenguaje intermedio que resultó fundamental
por introducir la expresión condicional, una construcción sintáctica que
más tarde sería adoptada ampliamente por lenguajes imperativos.&lt;/p&gt;
&lt;h2&gt;El momento decisivo: concepto versus implementación&lt;/h2&gt;
&lt;p&gt;Una de las discusiones más reveladoras del vídeo aborda la distinción
entre el concepto original de LISP (1959) y &lt;a href="https://history.siam.org/sup/Fox_1960_LISP.pdf"&gt;su primera implementación
(1960)&lt;/a&gt;. McCarthy había concebido inicialmente una sintaxis de alto
nivel (&lt;a href="https://en.wikipedia.org/wiki/M-expression"&gt;M-expresión&lt;/a&gt;) que se compilaría a una representación simbólica
intermedia (&lt;a href="https://en.wikipedia.org/wiki/S-expression"&gt;S-expresión&lt;/a&gt;). Sin embargo, el éxito de la implementación de
la función &lt;a href="https://en.wikipedia.org/wiki/Eval#Lisp"&gt;eval&lt;/a&gt; puso de manifiesto la profunda simetría entre código y
datos —la &lt;a href="https://en.wikipedia.org/wiki/Homoiconicity"&gt;homoiconicidad&lt;/a&gt;— inherente a la S-expresión.&lt;/p&gt;
&lt;p&gt;Esta propiedad fundamental resultó tan poderosa que llevó al abandono de
la M-expresión, convirtiendo la sintaxis intermedia en el lenguaje de
programación definitivo.&lt;/p&gt;
&lt;h2&gt;Legado e influencia contemporánea&lt;/h2&gt;
&lt;p&gt;El vídeo concluye evaluando el legado perdurable de LISP en la ciencia
de la computación. Se le atribuye la introducción de conceptos
fundamentales como la &lt;a href="https://en.wikipedia.org/wiki/Conditional_(computer_programming)"&gt;expresión condicional&lt;/a&gt; y la recolección automática
de basura (&lt;a href="https://en.wikipedia.org/wiki/Garbage_collection_(computer_science)"&gt;garbage collection&lt;/a&gt;). Su relevancia actual se manifiesta a
través de sus numerosos &lt;a href="https://en.wikipedia.org/wiki/Lisp_(programming_language)#Major_dialects"&gt;dialectos modernos&lt;/a&gt;, destacando &lt;a href="https://en.wikipedia.org/wiki/Common_Lisp"&gt;Common Lisp&lt;/a&gt;,
&lt;a href="https://en.wikipedia.org/wiki/Scheme_(programming_language)"&gt;Scheme&lt;/a&gt;, &lt;a href="https://en.wikipedia.org/wiki/Clojure"&gt;Clojure&lt;/a&gt; y &lt;a href="https://en.wikipedia.org/wiki/Racket_(programming_language)"&gt;Racket&lt;/a&gt;, que continúan explorando y expandiendo los
principios originales del lenguaje.&lt;/p&gt;</description><category>FunctionalProgramming</category><category>Lisp</category><guid>https://jaalonso.github.io/vestigium/posts/2025/06/15-hablemos-de-lisp/</guid><pubDate>Sun, 15 Jun 2025 14:00:00 GMT</pubDate></item><item><title>Reseña de «Hardest problems in mathematics, physics &amp; the future of AI»</title><link>https://jaalonso.github.io/vestigium/posts/2025/06/15-hardest-problems-in-mathematics-physics-the-future-of-ai/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;En la entrevista "&lt;a href="https://youtu.be/HUkBz-cdB-k"&gt;Hardest problems in mathematics, physics &amp;amp; the future of AI&lt;/a&gt;", Terence Tao comparte sus reflexiones sobre diversos problemas
fundamentales sin resolver en análisis y teoría de números, examina la
metodología de la investigación matemática contemporánea y analiza el
papel emergente que desempeñan la verificación formal y la inteligencia
artificial en la disciplina.&lt;/p&gt;
&lt;h2&gt;Problemas fundamentales y sus complejidades intrínsecas&lt;/h2&gt;
&lt;p&gt;Tao examina varios problemas que se encuentran en la frontera del
conocimiento matemático actual. En análisis, dedica especial atención al
&lt;strong&gt;&lt;a href="https://en.wikipedia.org/wiki/Kakeya_set"&gt;problema de Kakeya&lt;/a&gt;&lt;/strong&gt;, destacando sus profundas conexiones con el
análisis armónico y las ecuaciones en derivadas parciales. Su análisis
revela cómo este problema aparentemente geométrico se entrelaza con
áreas fundamentales del análisis moderno.&lt;/p&gt;
&lt;p&gt;Respecto al &lt;strong&gt;&lt;a href="https://en.wikipedia.org/wiki/Navier%E2%80%93Stokes_equations"&gt;problema de la regularidad de Navier-Stokes&lt;/a&gt;&lt;/strong&gt;, Tao
identifica la "&lt;a href="https://goong.com/es/word/supercriticality-que-significa--traduccion/"&gt;supercriticalidad&lt;/a&gt;" como el obstáculo central que impide
su resolución. De manera particularmente innovadora, describe
&lt;a href="https://arxiv.org/pdf/1402.0290"&gt;su construcción teórica de un análogo
fluídico de una máquina de von Neumann&lt;/a&gt;, presentándola como una
estrategia prometedora para demostrar la existencia de explosiones en
tiempo finito (&lt;em&gt;blowup&lt;/em&gt;) en las soluciones de estas ecuaciones.&lt;/p&gt;
&lt;h2&gt;Desafíos en teoría de números&lt;/h2&gt;
&lt;p&gt;En el ámbito de la teoría de números, Tao analiza la &lt;strong&gt;&lt;a href="https://es.wikipedia.org/wiki/Conjetura_de_los_n%C3%BAmeros_primos_gemelos"&gt;conjetura de los
primos gemelos&lt;/a&gt;&lt;/strong&gt;, atribuyendo su persistente dificultad a la extrema
fragilidad del patrón subyacente. Explica cómo este patrón podría ser
destruido por "conspiraciones" matemáticas imperceptibles para los
métodos estadísticos tradicionales. Esta fragilidad contrasta
marcadamente con la robustez inherente de las progresiones aritméticas,
como las estudiadas en el &lt;a href="https://en.wikipedia.org/wiki/Green%E2%80%93Tao_theorem"&gt;teorema de Green-Tao&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Un concepto clave que emerge de su análisis es el &lt;a href="https://terrytao.wordpress.com/2007/06/05/open-question-the-parity-problem-in-sieve-theory/"&gt;problema de la
paridad&lt;/a&gt;*, que identifica como un obstáculo metodológico fundamental en
teoría de números. En cuanto a la &lt;a href="https://es.wikipedia.org/wiki/Hip%C3%B3tesis_de_Riemann"&gt;hipótesis de Riemann&lt;/a&gt;, Tao la
considera aún más inaccesible a los métodos actuales, situándola en una
categoría propia de dificultad.&lt;/p&gt;
&lt;h2&gt;Marco filosófico y metodológico&lt;/h2&gt;
&lt;p&gt;Un hilo conductor de la entrevista es la exploración de la &lt;strong&gt;dicotomía
entre estructura y aleatoriedad&lt;/strong&gt;, un tema que permea múltiples áreas de
las matemáticas. Esta perspectiva filosófica informa tanto el análisis
de problemas específicos como la comprensión general de los fenómenos
matemáticos.&lt;/p&gt;
&lt;p&gt;Metodológicamente, Tao defiende un enfoque de &lt;strong&gt;simplificación
estratégica&lt;/strong&gt; en la resolución de problemas. Su estrategia consiste en
descomponer problemas complejos en dificultades individuales, abordar
cada una por separado, y posteriormente integrar las soluciones. Este
método refleja una filosofía pragmática que prioriza la claridad
conceptual y el progreso incremental.&lt;/p&gt;
&lt;h2&gt;Transformación tecnológica de las matemáticas&lt;/h2&gt;
&lt;p&gt;Una porción sustancial de la discusión se centra en el impacto
transformador de la &lt;a href="https://en.wikipedia.org/wiki/Automated_reasoning"&gt;prueba asistida por ordenador&lt;/a&gt;, con particular
énfasis en el asistente de pruebas &lt;a href="https://en.wikipedia.org/wiki/Lean_(proof_assistant)"&gt;Lean&lt;/a&gt;. Tao ilustra su potencial a
través de su "&lt;a href="https://teorth.github.io/equational_theories/"&gt;Equational theories project&lt;/a&gt;" de clasificación de 22
millones de identidades algebraicas,
&lt;a href="https://terrytao.wordpress.com/wp-content/uploads/2025/06/math-experiments.pdf"&gt;demostrando
cómo estas herramientas facilitan la colaboración a gran escala y la
gestión de la complejidad en pruebas matemáticas modernas&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Sus predicciones sobre el futuro son especialmente significativas:
anticipa que las herramientas de inteligencia artificial &lt;strong&gt;revolucionarán
la formalización matemática&lt;/strong&gt;. Más ambiciosamente, prevé que la IA podría
generar conjeturas matemáticas genuinamente novedosas al identificar
conexiones profundas entre campos aparentemente dispares.&lt;/p&gt;
&lt;h2&gt;Síntesis y perspectiva&lt;/h2&gt;
&lt;p&gt;La entrevista proporciona una ventana excepcional al proceso intelectual
de uno de los matemáticos más influyentes de nuestra época. Tao logra
equilibrar la precisión técnica con la accesibilidad conceptual,
ofreciendo tanto análisis detallados de problemas específicos como
reflexiones más amplias sobre la naturaleza de la investigación
matemática.&lt;/p&gt;
&lt;p&gt;Su visión integra consideraciones técnicas, marcos filosóficos y
prospectivas tecnológicas, presentando una imagen completa de las
matemáticas como disciplina en constante evolución. La entrevista
destaca no solo los desafíos actuales, sino también las herramientas
emergentes que podrían redefinir fundamentalmente cómo se desarrollarán
las matemáticas en el futuro.&lt;/p&gt;</description><category>AI</category><category>AIforMath</category><category>ITP</category><category>LeanProver</category><category>Math</category><guid>https://jaalonso.github.io/vestigium/posts/2025/06/15-hardest-problems-in-mathematics-physics-the-future-of-ai/</guid><pubDate>Sun, 15 Jun 2025 10:00:00 GMT</pubDate></item><item><title>Reseña de «Mathesis: Towards formal theorem proving from natural languages»</title><link>https://jaalonso.github.io/vestigium/posts/2025/06/13-resena-de-mathesis-towards-formal-theorem-proving-from-natural-languages/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;En el artículo «&lt;a href="https://arxiv.org/abs/2506.07047"&gt;Mathesis: Towards formal theorem proving from natural
languages&lt;/a&gt;», se aborda la limitación clave de los demostradores de
teoremas: su dependencia de enunciados ya formalizados. El trabajo se
centra en el paso crítico de la 'autoformalización' —la traducción a un
lenguaje formal como &lt;a href="https://en.wikipedia.org/wiki/Lean_(proof_assistant)"&gt;Lean 4&lt;/a&gt;— y presenta Mathesis, un sistema integral
diseñado para automatizar todo el proceso.&lt;/p&gt;
&lt;p&gt;El sistema introduce un Mathesis-Autoformalizer entrenado mediante
aprendizaje por refuerzo para optimizar la traducción a código Lean. Su
rendimiento se evalúa con LeanScorer, y se pone a prueba en
Gaokao-Formal, un nuevo y exigente banco de pruebas. Finalmente,
Mathesis-Prover genera la demostración completa en Lean, asegurando que
la prueba final sea verificable.&lt;/p&gt;
&lt;p&gt;Los resultados demuestran que Mathesis alcanza un rendimiento de
vanguardia en varios bancos de prueba. El análisis revela una conclusión
crucial: las mejoras en la autoformalización impactan el éxito final
mucho más que las mejoras en el demostrador. Esto se explica porque si
el problema se traduce incorrectamente a código Lean, el demostrador
recibe una tarea mal planteada y no puede generar una prueba válida, sin
importar su potencia. El trabajo confirma así que una traducción inicial
de alta calidad es el factor más determinante para el éxito del proceso.&lt;/p&gt;</description><category>AI</category><category>AIforMath</category><category>ITP</category><category>LeanProver</category><category>LLMs</category><category>Math</category><guid>https://jaalonso.github.io/vestigium/posts/2025/06/13-resena-de-mathesis-towards-formal-theorem-proving-from-natural-languages/</guid><pubDate>Fri, 13 Jun 2025 16:35:00 GMT</pubDate></item><item><title>Reseña de «MATP-BENCH: Can MLLM be a good automated theorem prover for multimodal problems?»</title><link>https://jaalonso.github.io/vestigium/posts/2025/06/13-resena-de-matp-bench-can-mllm-be-a-good-automated-theorem-prover-for-multimodal-problems/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;En el artículo «&lt;a href="https://arxiv.org/abs/2506.06034"&gt;MATP-BENCH: Can MLLM be a good automated theorem prover for multimodal problems?&lt;/a&gt;», los autores investigan la aplicabilidad de
los modelos de lenguaje grandes multimodales (MLLMs) al problema de la
demostración automática de teoremas que involucran componentes tanto
textuales como visuales. Motivados por las limitaciones de los enfoques
puramente textuales en dominios como la geometría, donde los diagramas
constituyen información esencial, desarrollan un marco de evaluación
sistemático para esta clase de problemas.&lt;/p&gt;
&lt;p&gt;La contribución principal consiste en la construcción de &lt;a href="https://github.com/Zhitao-He/MATPBench"&gt;MATP-BENCH&lt;/a&gt;, un
conjunto de datos que contiene más de 1000 problemas matemáticos
multimodales formalizados en tres asistentes de demostración: &lt;a href="https://en.wikipedia.org/wiki/Lean_(proof_assistant)"&gt;Lean 4&lt;/a&gt;,
&lt;a href="https://en.wikipedia.org/wiki/Rocq"&gt;Coq&lt;/a&gt; e &lt;a href="https://en.wikipedia.org/wiki/Isabelle_(proof_assistant)"&gt;Isabelle/HOL&lt;/a&gt;. El corpus abarca problemas de complejidad variable,
desde el nivel de secundaria hasta competiciones matemáticas avanzadas,
proporcionando así un banco de pruebas comprehensivo para evaluar
capacidades de razonamiento multimodal.&lt;/p&gt;
&lt;p&gt;Los experimentos incluyen seis modelos representativos: tres con
capacidades especializadas de razonamiento (OpenAI-o1,
Claude-3.7-Sonnet-Thinking, Gemini-2.0-Flash-Thinking) y tres sin estas
capacidades (GPT-4.1, Qwen2.5-VL-Instruct-70B,
Llama3.2-Vision-Instruct-11B). Los resultados revelan que, si bien los
modelos demuestran competencia en la comprensión de problemas y
formalización de enunciados, exhiben deficiencias significativas en la
construcción de cadenas de inferencia válidas.&lt;/p&gt;
&lt;p&gt;El análisis establece que la principal limitación no radica en las
capacidades de percepción visual sino en la insuficiencia del
razonamiento simbólico formal. Los autores concluyen que los MLLMs
actuales no constituyen demostradores automáticos efectivos para
problemas multimodales, identificando la brecha entre comprensión
multimodal y razonamiento lógico como el desafío fundamental a resolver.&lt;/p&gt;
&lt;p&gt;MATP-BENCH se posiciona como el primer banco de prueba estándar para
este dominio, proporcionando una base metodológica para la evaluación de
futuros desarrollos en demostración automática multimodal.&lt;/p&gt;</description><category>AI</category><category>AIforMath</category><category>CoqProver</category><category>IsabelleHOL</category><category>ITP</category><category>LeanProver</category><category>Math</category><category>MLLMs</category><guid>https://jaalonso.github.io/vestigium/posts/2025/06/13-resena-de-matp-bench-can-mllm-be-a-good-automated-theorem-prover-for-multimodal-problems/</guid><pubDate>Fri, 13 Jun 2025 15:10:00 GMT</pubDate></item></channel></rss>
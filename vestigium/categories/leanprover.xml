<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Vestigium (Publicaciones sobre LeanProver)</title><link>https://jaalonso.github.io/vestigium/</link><description></description><atom:link href="https://jaalonso.github.io/vestigium/categories/leanprover.xml" rel="self" type="application/rss+xml"></atom:link><language>es</language><copyright>Contents © 2025 &lt;a href="mailto:"&gt;José A. Alonso&lt;/a&gt; 
&lt;a rel="license" href="https://creativecommons.org/licenses/by-nc-sa/4.0/"&gt;
&lt;img alt="Creative Commons License BY-NC-SA"
style="border-width:0; margin-bottom:12px;"
src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"&gt;&lt;/a&gt;</copyright><lastBuildDate>Wed, 18 Jun 2025 09:44:10 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Readings shared June 17, 2025</title><link>https://jaalonso.github.io/vestigium/posts/2025/06/18-readings_shared_06-17-25/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;The readings shared in &lt;a href="https://bsky.app/profile/jalonso.bsky.social"&gt;Bluesky&lt;/a&gt; on 17 June 2025 are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/JOSHCLUNE/LeanHammer"&gt;LeanHammer: an automated reasoning tool for Lean which combines multiple techniques for proof search and formal reconstruction&lt;/a&gt;. ~ Joshua Clune et als. #ITP #LeanProver&lt;/li&gt;
&lt;li&gt;&lt;a href="https://byorgey.github.io/blog/posts/2025/06/16/monads-are-not-burritos.html"&gt;Monads are not like burritos&lt;/a&gt;. ~ Brent Yorgey. #Haskell #FunctionalProgramming&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mmhaskell.com/blog/2025/6/16/two-pointer-algorithms"&gt;Comparing codes: Two pointer algorithms&lt;/a&gt;. ~ James Bowen. #Haskell #FunctionalProgramming #Rust&lt;/li&gt;
&lt;li&gt;&lt;a href="https://well-typed.com/blog/2025/06/ghci-multiple-home-units/"&gt;Making GHCi compatible with multiple home units&lt;/a&gt;. ~ Hannes Siebenhandl, Matthew Pickering. #Haskell #FunctionalProgramming&lt;/li&gt;
&lt;/ul&gt;</description><category>FunctionalProgramming</category><category>Haskell</category><category>ITP</category><category>LeanProver</category><category>RustLang</category><guid>https://jaalonso.github.io/vestigium/posts/2025/06/18-readings_shared_06-17-25/</guid><pubDate>Wed, 18 Jun 2025 04:00:00 GMT</pubDate></item><item><title>Readings shared June 16, 2025</title><link>https://jaalonso.github.io/vestigium/posts/2025/06/17-readings_shared_06-16-25/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;The readings shared in &lt;a href="https://bsky.app/profile/jalonso.bsky.social"&gt;Bluesky&lt;/a&gt; on 16 June 2025 are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2410.01466"&gt;A complete formalization of Fermat's Last Theorem for regular primes in Lean&lt;/a&gt;. ~ Alex Best, Christopher Birkbeck, Riccardo Brasca, Eric Rodriguez Boidi, Ruben van De Velde, Andrew Yang. #ITP #LeanProver #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2506.11085"&gt;LeanExplore: A search engine for Lean 4 declarations&lt;/a&gt;. ~ Justin Asher. #ITP #LeanProver&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.math.nagoya-u.ac.jp/~garrigue/papers/weng-forte2025.pdf"&gt;An approach to formalize information-theoretic security of multiparty computation protocols&lt;/a&gt;. ~ Cheng-Hui Weng, Reynald Affeldt, Jacques Garrigue, Takafumi Saikawa. #ITP #Rocq&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.math.nagoya-u.ac.jp/~garrigue/papers/weng-ppl2025.pdf"&gt;Toward a formalization of secure multiparty computation stack&lt;/a&gt;. ~ Cheng-Hui Weng, Reynald Affeldt, Jacques Garrigue, Takafumi Saikaaw. #ITP #CoqProver #Rocq&lt;/li&gt;
&lt;/ul&gt;</description><category>CoqProver</category><category>ITP</category><category>LeanProver</category><category>Math</category><category>Rocq</category><guid>https://jaalonso.github.io/vestigium/posts/2025/06/17-readings_shared_06-16-25/</guid><pubDate>Tue, 17 Jun 2025 04:00:00 GMT</pubDate></item><item><title>Readings shared June 15, 2025</title><link>https://jaalonso.github.io/vestigium/posts/2025/06/16-readings_shared_06-15-25/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;The readings shared in &lt;a href="https://bsky.app/profile/jalonso.bsky.social"&gt;Bluesky&lt;/a&gt; on 15 June 2025 are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.dcs.gla.ac.uk/~michele/papers/SAC2025.pdf"&gt;BiCoq: Bigraphs formalisation with Coq&lt;/a&gt;. ~ Cécile Marcon et als. #ITP #CoqProver #Rocq #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://byorgey.github.io/blog/posts/2025/06/10/comprog-hs-intro.html"&gt;Introduction to competitive programming in Haskell&lt;/a&gt;. ~ Brent Yorgey. #Haskell #FunctionalProgramming&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/meooow25/haccepted"&gt;Data structures and algorithms for competitive programming in Haskell&lt;/a&gt;. ~ Soumik Sarkar. #Haskell #FunctionalProgramming&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/HUkBz-cdB-k"&gt;Hardest problems in mathematics, physics &amp;amp; the future of AI&lt;/a&gt;. ~ Terence Tao, Lex Fridman. #ITP #LeanProver #AI #Math #AIforMath&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/qtVjx9mKVoE"&gt;Hablemos de LISP&lt;/a&gt;. ~ Manuel Rubio, Antonio Rubio. #Lisp #Programming&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/vestigium/posts/2025/06/15-hardest-problems-in-mathematics-physics-the-future-of-ai/"&gt;Reseña de «Hardest problems in mathematics, physics &amp;amp; the future of AI»&lt;/a&gt;. #ITP #LeanProver #AI #Math #AIforMath&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/vestigium/posts/2025/06/15-hablemos-de-lisp/"&gt;Reseña de «Hablemos de Lisp»&lt;/a&gt;. #Lisp #FunctionalProgramming&lt;/li&gt;
&lt;/ul&gt;</description><category>AI</category><category>AIforMath</category><category>CoqProver</category><category>FunctionalProgramming</category><category>Haskell</category><category>ITP</category><category>LeanProver</category><category>Lisp</category><category>Math</category><category>Programming</category><category>Rocq</category><guid>https://jaalonso.github.io/vestigium/posts/2025/06/16-readings_shared_06-15-25/</guid><pubDate>Mon, 16 Jun 2025 06:00:00 GMT</pubDate></item><item><title>Reseña de «Hardest problems in mathematics, physics &amp; the future of AI»</title><link>https://jaalonso.github.io/vestigium/posts/2025/06/15-hardest-problems-in-mathematics-physics-the-future-of-ai/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;En la entrevista "&lt;a href="https://youtu.be/HUkBz-cdB-k"&gt;Hardest problems in mathematics, physics &amp;amp; the future of AI&lt;/a&gt;", Terence Tao comparte sus reflexiones sobre diversos problemas
fundamentales sin resolver en análisis y teoría de números, examina la
metodología de la investigación matemática contemporánea y analiza el
papel emergente que desempeñan la verificación formal y la inteligencia
artificial en la disciplina.&lt;/p&gt;
&lt;h2&gt;Problemas fundamentales y sus complejidades intrínsecas&lt;/h2&gt;
&lt;p&gt;Tao examina varios problemas que se encuentran en la frontera del
conocimiento matemático actual. En análisis, dedica especial atención al
&lt;strong&gt;&lt;a href="https://en.wikipedia.org/wiki/Kakeya_set"&gt;problema de Kakeya&lt;/a&gt;&lt;/strong&gt;, destacando sus profundas conexiones con el
análisis armónico y las ecuaciones en derivadas parciales. Su análisis
revela cómo este problema aparentemente geométrico se entrelaza con
áreas fundamentales del análisis moderno.&lt;/p&gt;
&lt;p&gt;Respecto al &lt;strong&gt;&lt;a href="https://en.wikipedia.org/wiki/Navier%E2%80%93Stokes_equations"&gt;problema de la regularidad de Navier-Stokes&lt;/a&gt;&lt;/strong&gt;, Tao
identifica la "&lt;a href="https://goong.com/es/word/supercriticality-que-significa--traduccion/"&gt;supercriticalidad&lt;/a&gt;" como el obstáculo central que impide
su resolución. De manera particularmente innovadora, describe
&lt;a href="https://arxiv.org/pdf/1402.0290"&gt;su construcción teórica de un análogo
fluídico de una máquina de von Neumann&lt;/a&gt;, presentándola como una
estrategia prometedora para demostrar la existencia de explosiones en
tiempo finito (&lt;em&gt;blowup&lt;/em&gt;) en las soluciones de estas ecuaciones.&lt;/p&gt;
&lt;h2&gt;Desafíos en teoría de números&lt;/h2&gt;
&lt;p&gt;En el ámbito de la teoría de números, Tao analiza la &lt;strong&gt;&lt;a href="https://es.wikipedia.org/wiki/Conjetura_de_los_n%C3%BAmeros_primos_gemelos"&gt;conjetura de los
primos gemelos&lt;/a&gt;&lt;/strong&gt;, atribuyendo su persistente dificultad a la extrema
fragilidad del patrón subyacente. Explica cómo este patrón podría ser
destruido por "conspiraciones" matemáticas imperceptibles para los
métodos estadísticos tradicionales. Esta fragilidad contrasta
marcadamente con la robustez inherente de las progresiones aritméticas,
como las estudiadas en el &lt;a href="https://en.wikipedia.org/wiki/Green%E2%80%93Tao_theorem"&gt;teorema de Green-Tao&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Un concepto clave que emerge de su análisis es el &lt;a href="https://terrytao.wordpress.com/2007/06/05/open-question-the-parity-problem-in-sieve-theory/"&gt;problema de la
paridad&lt;/a&gt;*, que identifica como un obstáculo metodológico fundamental en
teoría de números. En cuanto a la &lt;a href="https://es.wikipedia.org/wiki/Hip%C3%B3tesis_de_Riemann"&gt;hipótesis de Riemann&lt;/a&gt;, Tao la
considera aún más inaccesible a los métodos actuales, situándola en una
categoría propia de dificultad.&lt;/p&gt;
&lt;h2&gt;Marco filosófico y metodológico&lt;/h2&gt;
&lt;p&gt;Un hilo conductor de la entrevista es la exploración de la &lt;strong&gt;dicotomía
entre estructura y aleatoriedad&lt;/strong&gt;, un tema que permea múltiples áreas de
las matemáticas. Esta perspectiva filosófica informa tanto el análisis
de problemas específicos como la comprensión general de los fenómenos
matemáticos.&lt;/p&gt;
&lt;p&gt;Metodológicamente, Tao defiende un enfoque de &lt;strong&gt;simplificación
estratégica&lt;/strong&gt; en la resolución de problemas. Su estrategia consiste en
descomponer problemas complejos en dificultades individuales, abordar
cada una por separado, y posteriormente integrar las soluciones. Este
método refleja una filosofía pragmática que prioriza la claridad
conceptual y el progreso incremental.&lt;/p&gt;
&lt;h2&gt;Transformación tecnológica de las matemáticas&lt;/h2&gt;
&lt;p&gt;Una porción sustancial de la discusión se centra en el impacto
transformador de la &lt;a href="https://en.wikipedia.org/wiki/Automated_reasoning"&gt;prueba asistida por ordenador&lt;/a&gt;, con particular
énfasis en el asistente de pruebas &lt;a href="https://en.wikipedia.org/wiki/Lean_(proof_assistant)"&gt;Lean&lt;/a&gt;. Tao ilustra su potencial a
través de su "&lt;a href="https://teorth.github.io/equational_theories/"&gt;Equational theories project&lt;/a&gt;" de clasificación de 22
millones de identidades algebraicas,
&lt;a href="https://terrytao.wordpress.com/wp-content/uploads/2025/06/math-experiments.pdf"&gt;demostrando
cómo estas herramientas facilitan la colaboración a gran escala y la
gestión de la complejidad en pruebas matemáticas modernas&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Sus predicciones sobre el futuro son especialmente significativas:
anticipa que las herramientas de inteligencia artificial &lt;strong&gt;revolucionarán
la formalización matemática&lt;/strong&gt;. Más ambiciosamente, prevé que la IA podría
generar conjeturas matemáticas genuinamente novedosas al identificar
conexiones profundas entre campos aparentemente dispares.&lt;/p&gt;
&lt;h2&gt;Síntesis y perspectiva&lt;/h2&gt;
&lt;p&gt;La entrevista proporciona una ventana excepcional al proceso intelectual
de uno de los matemáticos más influyentes de nuestra época. Tao logra
equilibrar la precisión técnica con la accesibilidad conceptual,
ofreciendo tanto análisis detallados de problemas específicos como
reflexiones más amplias sobre la naturaleza de la investigación
matemática.&lt;/p&gt;
&lt;p&gt;Su visión integra consideraciones técnicas, marcos filosóficos y
prospectivas tecnológicas, presentando una imagen completa de las
matemáticas como disciplina en constante evolución. La entrevista
destaca no solo los desafíos actuales, sino también las herramientas
emergentes que podrían redefinir fundamentalmente cómo se desarrollarán
las matemáticas en el futuro.&lt;/p&gt;</description><category>AI</category><category>AIforMath</category><category>ITP</category><category>LeanProver</category><category>Math</category><guid>https://jaalonso.github.io/vestigium/posts/2025/06/15-hardest-problems-in-mathematics-physics-the-future-of-ai/</guid><pubDate>Sun, 15 Jun 2025 10:00:00 GMT</pubDate></item><item><title>Readings shared June 14, 2025</title><link>https://jaalonso.github.io/vestigium/posts/2025/06/15-readings_shared_06-14-25/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;The readings shared in &lt;a href="https://bsky.app/profile/jalonso.bsky.social"&gt;Bluesky&lt;/a&gt; on 14 June 2025 are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://amslaurea.unibo.it/id/eprint/32676/1/MasterThesis.pdf"&gt;Formalizing information theory in Lean 4: divergences, hypothesis testing and the data processing inequality&lt;/a&gt;. ~ Lorenzo Luccioli. #ITP #LeanProver #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://amslaurea.unibo.it/id/eprint/35220/1/TESI_MAGISTRALE_MARCO_PETRACCI-finale.pdf"&gt;Collaboration and innovation in the Equational Theories Project: Formalizing mathematics with Lean 4&lt;/a&gt;. ~ Marco Petracci. #ITP #LeanProver #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://irreal.org/blog/?p=13051"&gt;Is Emacs an operating system?&lt;/a&gt; #Emacs&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/cursos/m-ra-12"&gt;Curso "Razonamiento automático (2012-13)"&lt;/a&gt;. #RazonamientoAutomático #DemostraciónInteractiva #IsabelleHOL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/cursos/i1m-13"&gt;Curso "Informática (2013-14)"&lt;/a&gt;. #Haskell #ProgramaciónFuncional #Algorítmica #CálculoSimbólico #Maxima&lt;/li&gt;
&lt;/ul&gt;</description><category>Algorithms</category><category>Emacs</category><category>FunctionalProgramming</category><category>Haskell</category><category>IsabelleHOL</category><category>ITP</category><category>LeanProver</category><category>Math</category><category>Maxima</category><guid>https://jaalonso.github.io/vestigium/posts/2025/06/15-readings_shared_06-14-25/</guid><pubDate>Sun, 15 Jun 2025 04:00:00 GMT</pubDate></item><item><title>Readings shared June 13, 2025</title><link>https://jaalonso.github.io/vestigium/posts/2025/06/14-readings_shared_06-13-25/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;The readings shared in &lt;a href="https://bsky.app/profile/jalonso.bsky.social"&gt;Bluesky&lt;/a&gt; on 13 June 2025 are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2503.00959"&gt;Formalizing zeta and L-functions in Lean&lt;/a&gt;. ~ David Loeffler, Michael Stoll. #ITP #LeanProver #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="http://adam.chlipala.net/theses/teshome.pdf"&gt;Formal verification of relational algebra transformations in Fiat2 using Coq&lt;/a&gt;. ~ Christian Teshome. #ITP #CoqProver #Rocq&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2506.10048"&gt;Growing a modular framework for modal systems - HOLMS: a HOL Light library&lt;/a&gt;. ~ Antonella Bilotta. #ITP #HOL_Light #Logic #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.morph.so/blog/trinity"&gt;Trinity: an autoformalization system for verified superintelligence&lt;/a&gt;. #Autoformalization #AIforMath #ITP #LeanProver&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/morph-labs/lean-abc-true-almost-always"&gt;The abc conjecture almost always — autoformalized&lt;/a&gt;. ~ Jesse Michael Han et als. #Autoformalization #AIforMath #ITP #LeanProver&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2506.06034"&gt;MATP-BENCH: Can MLLM be a good automated theorem prover for multimodal problems?&lt;/a&gt; ~ Zhitao He et als. #AI #MLLMs #Math #ITP #IsabelleHOL #LeanProver #CoqProver #AIforMath&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2506.07047"&gt;Mathesis: Towards formal theorem proving from natural languages&lt;/a&gt;. ~ Yu Xuejun et als. #AI #LLMs #Math #ITP #LeanProver #AIforMath&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2506.10558"&gt;StepProof: Step-by-step verification of natural language mathematical proofs&lt;/a&gt;. ~ Xiaolin Hu, Qinghua Zhou, Bogdan Grechuk, Ivan Y. Tyukin. #LLMs #ITP #IsabelleHOL #Math #AIforMath&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/vestigium/posts/2025/06/13-resena-de-matp-bench-can-mllm-be-a-good-automated-theorem-prover-for-multimodal-problems/"&gt;Reseña de «MATP-BENCH: Can MLLM be a good automated theorem prover for multimodal problems?»&lt;/a&gt;. #AI #MLLMs #Math #ITP #IsabelleHOL #LeanProver #CoqProver #AIforMath&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/vestigium/posts/2025/06/13-resena-de-mathesis-towards-formal-theorem-proving-from-natural-languages/"&gt;Reseña de «Mathesis: Towards formal theorem proving from natural languages»&lt;/a&gt;. #AI #LLMs #Math #ITP #LeanProver #AIforMath&lt;/li&gt;
&lt;/ul&gt;</description><category>AI</category><category>AIforMath</category><category>Autoformalization</category><category>CoqProver</category><category>HOL_Light</category><category>IsabelleHOL</category><category>ITP</category><category>LeanProver</category><category>LLMs</category><category>Logic</category><category>Math</category><category>MLLMs</category><category>Rocq</category><guid>https://jaalonso.github.io/vestigium/posts/2025/06/14-readings_shared_06-13-25/</guid><pubDate>Sat, 14 Jun 2025 09:15:00 GMT</pubDate></item><item><title>Reseña de «Mathesis: Towards formal theorem proving from natural languages»</title><link>https://jaalonso.github.io/vestigium/posts/2025/06/13-resena-de-mathesis-towards-formal-theorem-proving-from-natural-languages/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;En el artículo «&lt;a href="https://arxiv.org/abs/2506.07047"&gt;Mathesis: Towards formal theorem proving from natural
languages&lt;/a&gt;», se aborda la limitación clave de los demostradores de
teoremas: su dependencia de enunciados ya formalizados. El trabajo se
centra en el paso crítico de la 'autoformalización' —la traducción a un
lenguaje formal como &lt;a href="https://en.wikipedia.org/wiki/Lean_(proof_assistant)"&gt;Lean 4&lt;/a&gt;— y presenta Mathesis, un sistema integral
diseñado para automatizar todo el proceso.&lt;/p&gt;
&lt;p&gt;El sistema introduce un Mathesis-Autoformalizer entrenado mediante
aprendizaje por refuerzo para optimizar la traducción a código Lean. Su
rendimiento se evalúa con LeanScorer, y se pone a prueba en
Gaokao-Formal, un nuevo y exigente banco de pruebas. Finalmente,
Mathesis-Prover genera la demostración completa en Lean, asegurando que
la prueba final sea verificable.&lt;/p&gt;
&lt;p&gt;Los resultados demuestran que Mathesis alcanza un rendimiento de
vanguardia en varios bancos de prueba. El análisis revela una conclusión
crucial: las mejoras en la autoformalización impactan el éxito final
mucho más que las mejoras en el demostrador. Esto se explica porque si
el problema se traduce incorrectamente a código Lean, el demostrador
recibe una tarea mal planteada y no puede generar una prueba válida, sin
importar su potencia. El trabajo confirma así que una traducción inicial
de alta calidad es el factor más determinante para el éxito del proceso.&lt;/p&gt;</description><category>AI</category><category>AIforMath</category><category>ITP</category><category>LeanProver</category><category>LLMs</category><category>Math</category><guid>https://jaalonso.github.io/vestigium/posts/2025/06/13-resena-de-mathesis-towards-formal-theorem-proving-from-natural-languages/</guid><pubDate>Fri, 13 Jun 2025 16:35:00 GMT</pubDate></item><item><title>Reseña de «MATP-BENCH: Can MLLM be a good automated theorem prover for multimodal problems?»</title><link>https://jaalonso.github.io/vestigium/posts/2025/06/13-resena-de-matp-bench-can-mllm-be-a-good-automated-theorem-prover-for-multimodal-problems/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;En el artículo «&lt;a href="https://arxiv.org/abs/2506.06034"&gt;MATP-BENCH: Can MLLM be a good automated theorem prover for multimodal problems?&lt;/a&gt;», los autores investigan la aplicabilidad de
los modelos de lenguaje grandes multimodales (MLLMs) al problema de la
demostración automática de teoremas que involucran componentes tanto
textuales como visuales. Motivados por las limitaciones de los enfoques
puramente textuales en dominios como la geometría, donde los diagramas
constituyen información esencial, desarrollan un marco de evaluación
sistemático para esta clase de problemas.&lt;/p&gt;
&lt;p&gt;La contribución principal consiste en la construcción de &lt;a href="https://github.com/Zhitao-He/MATPBench"&gt;MATP-BENCH&lt;/a&gt;, un
conjunto de datos que contiene más de 1000 problemas matemáticos
multimodales formalizados en tres asistentes de demostración: &lt;a href="https://en.wikipedia.org/wiki/Lean_(proof_assistant)"&gt;Lean 4&lt;/a&gt;,
&lt;a href="https://en.wikipedia.org/wiki/Rocq"&gt;Coq&lt;/a&gt; e &lt;a href="https://en.wikipedia.org/wiki/Isabelle_(proof_assistant)"&gt;Isabelle/HOL&lt;/a&gt;. El corpus abarca problemas de complejidad variable,
desde el nivel de secundaria hasta competiciones matemáticas avanzadas,
proporcionando así un banco de pruebas comprehensivo para evaluar
capacidades de razonamiento multimodal.&lt;/p&gt;
&lt;p&gt;Los experimentos incluyen seis modelos representativos: tres con
capacidades especializadas de razonamiento (OpenAI-o1,
Claude-3.7-Sonnet-Thinking, Gemini-2.0-Flash-Thinking) y tres sin estas
capacidades (GPT-4.1, Qwen2.5-VL-Instruct-70B,
Llama3.2-Vision-Instruct-11B). Los resultados revelan que, si bien los
modelos demuestran competencia en la comprensión de problemas y
formalización de enunciados, exhiben deficiencias significativas en la
construcción de cadenas de inferencia válidas.&lt;/p&gt;
&lt;p&gt;El análisis establece que la principal limitación no radica en las
capacidades de percepción visual sino en la insuficiencia del
razonamiento simbólico formal. Los autores concluyen que los MLLMs
actuales no constituyen demostradores automáticos efectivos para
problemas multimodales, identificando la brecha entre comprensión
multimodal y razonamiento lógico como el desafío fundamental a resolver.&lt;/p&gt;
&lt;p&gt;MATP-BENCH se posiciona como el primer banco de prueba estándar para
este dominio, proporcionando una base metodológica para la evaluación de
futuros desarrollos en demostración automática multimodal.&lt;/p&gt;</description><category>AI</category><category>AIforMath</category><category>CoqProver</category><category>IsabelleHOL</category><category>ITP</category><category>LeanProver</category><category>Math</category><category>MLLMs</category><guid>https://jaalonso.github.io/vestigium/posts/2025/06/13-resena-de-matp-bench-can-mllm-be-a-good-automated-theorem-prover-for-multimodal-problems/</guid><pubDate>Fri, 13 Jun 2025 15:10:00 GMT</pubDate></item><item><title>Readings shared June 12, 2025</title><link>https://jaalonso.github.io/vestigium/posts/2025/06/13-readings_shared_06-12-25/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;The readings shared in &lt;a href="https://bsky.app/profile/jalonso.bsky.social"&gt;Bluesky&lt;/a&gt; on 12 June 2025 are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/live/R2t9ZRWiWEk"&gt;Formalizing the divided power envelope in Lean&lt;/a&gt;. ~ María Inés de Frutos Fernández. #ITP #LeanProver #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/live/YtbfIjgzNDI"&gt;Lean meta-theory: The proofs behind the proofs&lt;/a&gt;. ~ Mario Carneiro. #ITP #LeanProver&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/litexlang/golitex"&gt;Litex: Scale formal reasoning in AI age&lt;/a&gt;. ~ Jiachen Shen. #Logic #ATP #LitexLang&lt;/li&gt;
&lt;li&gt;&lt;a href="https://neus-2025.github.io/files/papers/paper_33.pdf"&gt;Lean Copilot: Large language models as copilots for theorem proving in Lean&lt;/a&gt;. ~ Peiyang Song, Kaiyu Yang, Anima Anandkumar. #ITP #LeanProver #LLMs&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dl.acm.org/doi/pdf/10.1145/3713082.3730382"&gt;Can large language models verify system software? A case study using FSCQ as a benchmark&lt;/a&gt;. ~ Jianxing Qin et als. #LLMs #ITP #CoqProver #Rocq&lt;/li&gt;
&lt;li&gt;&lt;a href="https://muratkasimov.art/Ya/Articles/Reinventing-records-and-variants"&gt;Reinventing records and variants&lt;/a&gt;. ~ Murat Kasimov. #Haskell #FunctionalProgramming&lt;/li&gt;
&lt;/ul&gt;</description><category>ATP</category><category>CoqProver</category><category>FunctionalProgramming</category><category>Haskell</category><category>ITP</category><category>LeanProver</category><category>LLMs</category><category>Logic</category><category>Math</category><category>Rocq</category><guid>https://jaalonso.github.io/vestigium/posts/2025/06/13-readings_shared_06-12-25/</guid><pubDate>Fri, 13 Jun 2025 08:40:00 GMT</pubDate></item><item><title>Readings shared June 11, 2025</title><link>https://jaalonso.github.io/vestigium/posts/2025/06/12-readings_shared_06-11-25/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;The readings shared in &lt;a href="https://bsky.app/profile/jalonso.bsky.social"&gt;Bluesky&lt;/a&gt; on 11 June 2025 are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2506.08321"&gt;LeanTutor: A formally-verified AI tutor for mathematical proofs&lt;/a&gt;. ~ Manooshree Patel et als. #ITP #LeanProver #Math #AIforMath #Teaching&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/nielsvoss/lean-pitfalls"&gt;Common Lean pitfalls&lt;/a&gt;. ~ Niels Voss. #ITP #LeanProver&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.microsoft.com/en-us/research/blog/rewriting-symcrypt-in-rust-to-modernize-microsofts-cryptographic-library/"&gt;Rewriting SymCrypt in Rust to modernize Microsoft’s cryptographic library&lt;/a&gt;. ~ Brenda Potts. #ITP #LeanProver #RustLang&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2506.08294v1"&gt;Z3Guide: A scalable, student-centered, and extensible educational environment for logic modeling&lt;/a&gt;. ~ Ruanqianqian Huang, Ayana Monroe, Peli de Halleux, Sorin Lerner, Nikolaj Bjørner. #Logic #SMT #Z3 #Teaching&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hal.univ-lille.fr/hal-05061202v1/file/main.pdf"&gt;Martin Davis: An overview of his work in logic, computer science, and philosophy&lt;/a&gt;. ~ Liesbeth De Mol, Yuri V. Matiyasevich, Eugenio G. Omodeo, Alberto Policriti, Wilfried Sieg, Elaine J. Weyuker. #Logic #Math #CompSci&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/vestigium/posts/2025/06/11-el-futuro-del-razonamiento-matematico-integrando-ia-y-lean/"&gt;El futuro del razonamiento matemático: Integrando IA y Lean&lt;/a&gt;. #IA #ITP #LeanProver #Math #AIforMath&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/vestigium/posts/2025/06/11-resena-de-leantutor-a-formally-verified-ai-tutor-for-mathematical-proofs/"&gt;Reseña de 'LeanTutor: A formally-verified AI tutor for mathematical proofs'&lt;/a&gt;. #ITP #LeanProver #Math #AIforMath #Teaching&lt;/li&gt;
&lt;/ul&gt;</description><category>AIforMath</category><category>CompSci</category><category>IA</category><category>ITP</category><category>LeanProver</category><category>Logic</category><category>Math</category><category>RustLang</category><category>SMT</category><category>Z3</category><guid>https://jaalonso.github.io/vestigium/posts/2025/06/12-readings_shared_06-11-25/</guid><pubDate>Thu, 12 Jun 2025 06:16:00 GMT</pubDate></item></channel></rss>
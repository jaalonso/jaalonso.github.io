<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Vestigium (Publicaciones sobre LeanProver)</title><link>https://jaalonso.github.io/vestigium/</link><description></description><atom:link href="https://jaalonso.github.io/vestigium/categories/leanprover.xml" rel="self" type="application/rss+xml"></atom:link><language>es</language><copyright>Contents © 2025 &lt;a href="mailto:"&gt;José A. Alonso&lt;/a&gt; 
&lt;a rel="license" href="https://creativecommons.org/licenses/by-nc-sa/4.0/"&gt;
&lt;img alt="Creative Commons License BY-NC-SA"
style="border-width:0; margin-bottom:12px;"
src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"&gt;&lt;/a&gt;</copyright><lastBuildDate>Thu, 10 Jul 2025 05:48:02 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Readings shared July 9, 2025</title><link>https://jaalonso.github.io/vestigium/posts/2025/07/10-readings_shared_07-09-25/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;The readings shared in &lt;a href="https://bsky.app/profile/jalonso.bsky.social"&gt;Bluesky&lt;/a&gt; on 9 July 2025 are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2405.19270"&gt;Formalising the local compactness of the adele ring&lt;/a&gt;. ~ Salvatore Mercuri. #ITP #LeanProver #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.philipzucker.com/dirty_lean/"&gt;Doing Lean dirty: Lean as a Jupyter notebook replacement&lt;/a&gt;. ~ Philip Zucker. #ITP #LeanProver&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.arith2025.org/proceedings/215900a149.pdf"&gt;Robust, end-to-end correctness proofs of industrial divide and square root RTL designs&lt;/a&gt;. ~ Sol Swords, Cuong Chau. #ITP #ACL2&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.researchgate.net/publication/393400892_The_ph-Weighted_Recognition_Hamiltonian_A_Self-Adjoint_Operator_Unifying_Automorphic_L-Functions_E_8_Symmetry_and_Cosmic_Dynamics"&gt;The φ-weighted recognition hamiltonian: A self-adjoint operator unifying automorphic L-functions, E 8 symmetry, and cosmic dynamics&lt;/a&gt;. #ITP #LeanProver&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.isa-afp.org/entries/Computational_pAdics.html"&gt;Computational p-adics (in Isabelle/HOL)&lt;/a&gt;. ~ Jeremy Sylvestre. #ITP #IsabelleHOL #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.isa-afp.org/entries/Oneway2Hiding.html"&gt;The oneway to hiding theorem (in Isabelle/HOL)&lt;/a&gt;. ~ Katharina Kreuzer, Dominique Unruh. #ITP #IsabelleHOL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.isa-afp.org/entries/Kraus_Maps.html"&gt;Kraus maps (in Isabelle/HOL)&lt;/a&gt;. ~ Dominique Unruh. #ITP #IsabelleHOL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.isa-afp.org/entries/Parikh.html"&gt;Parikh's theorem (in Isabelle/HOL)&lt;/a&gt;. ~ Fabian Lehr. #ITP #IsabelleHOL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hal.science/tel-05142432/document"&gt;Computer-assisted proofs for differential equations and dynamical systems&lt;/a&gt;. ~ Maxime Breden. #ITP #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mmhaskell.com/blog/2025/7/7/binary-search-in-haskell-and-rust"&gt;Comparing codes: Binary search in Haskell and Rust&lt;/a&gt;. ~ James Bowen. #Haskell #FunctionalProgramming #Rust&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2502.06055"&gt;Verified certificates via SAT and computer algebra systems for the Ramsey R(3,8) and R(3,9) problems&lt;/a&gt;. ~ Zhengyu Li et als. #SAT #CAS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2507.02726v1"&gt;Bourbaki: Self-generated and goal-conditioned MDPs for theorem proving&lt;/a&gt;. ~ Matthieu Zimmer et als. #LLMs #ITP #LeanProver&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2507.02541v1"&gt;Clarifying before reasoning: A Coq prover with structural context&lt;/a&gt;. ~ Yanzhen Lu et als. #LLMs #ITP #CoqProver&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/cursos/lmf-19"&gt;Curso "Lógica matemática y fundamentos (2019-20)"&lt;/a&gt;. #Lógica #ProgramaciónFuncional #IsabelleHOL&lt;/li&gt;
&lt;/ul&gt;</description><category>ACL2</category><category>CAS</category><category>CoqProver</category><category>FunctionalProgramming</category><category>Haskell</category><category>IsabelleHOL</category><category>ITP</category><category>LeanProver</category><category>LLMs</category><category>Logic</category><category>Math</category><category>Rust</category><category>SAT</category><guid>https://jaalonso.github.io/vestigium/posts/2025/07/10-readings_shared_07-09-25/</guid><pubDate>Thu, 10 Jul 2025 04:00:00 GMT</pubDate></item><item><title>Readings shared July 7, 2025</title><link>https://jaalonso.github.io/vestigium/posts/2025/07/08-readings_shared_07-07-25/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;The readings shared in &lt;a href="https://bsky.app/profile/jalonso.bsky.social"&gt;Bluesky&lt;/a&gt; on 7 July 2025 are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://lean-lang.org"&gt;Lean: a theorem prover and programming language that enables correct, maintainable, and formally verified code&lt;/a&gt;. #ITP #LeanProver #FunctionalProgramming&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/cursos/m-ra-17"&gt;Curso "Razonamiento automático (2017-18)"&lt;/a&gt;. #RazonamientoAutomático #DemostraciónInteractiva #IsabelleHOL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/cursos/lmf-18"&gt;Curso "Lógica matemática y fundamentos (2018-19)"&lt;/a&gt;. #Lógica #ProgramaciónFuncional #IsabelleHOL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/cursos/m-ra-18"&gt;Curso "Razonamiento automático (2018-19)"&lt;/a&gt;. #DemostraciónInteractiva #ProgramaciónFuncional #IsabelleHOL #Coq&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/cursos/i1m-19"&gt;Curso "Informática (2019-20)"&lt;/a&gt;. #Haskell #ProgramaciónFuncional #Algorítmica #CálculoSimbólico #Maxima&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.archive.org/web/http://www.cs.us.es/~jalonso/cursos/i1m-19/temas/2019-20-I1M-temas-PF.pdf"&gt;Temas de "Programación funcional" (2019-20)&lt;/a&gt;. #Haskell #ProgramaciónFuncional&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.archive.org/web/http://www.cs.us.es/~jalonso/cursos/i1m-19/ejercicios/ejercicios-I1M-2019.pdf"&gt;Ejercicios de programación funcional con Haskell (curso 2019-20)&lt;/a&gt;. #Haskell #ProgramaciónFuncional&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.archive.org/web/https://raw.githubusercontent.com/jaalonso/Examenes_de_PF_con_Haskell_Vol11/master/Libro/Examenes_de_PF_con_Haskell_Vol11.pdf"&gt;Exámenes de programación funcional con Haskell (curso 2019-20)&lt;/a&gt;. #Haskell #ProgramaciónFuncional&lt;/li&gt;
&lt;/ul&gt;</description><category>Coq</category><category>FunctionalProgramming</category><category>Haskell</category><category>IsabelleHOL</category><category>ITP</category><category>LeanProver</category><category>Logic</category><category>Maxima</category><guid>https://jaalonso.github.io/vestigium/posts/2025/07/08-readings_shared_07-07-25/</guid><pubDate>Tue, 08 Jul 2025 04:00:00 GMT</pubDate></item><item><title>Readings shared July 5, 2025</title><link>https://jaalonso.github.io/vestigium/posts/2025/07/06-readings_shared_07-05-25/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;The readings shared in &lt;a href="https://bsky.app/profile/jalonso.bsky.social"&gt;Bluesky&lt;/a&gt; on 5 July 2025 are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://adam.math.hhu.de/#/g/kbuzzard/FilterGame"&gt;The filter game (in Lean 4)&lt;/a&gt;. ~ Kevin Buzzard. #ITP #LeanProver #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://people.eng.unimelb.edu.au/rizkallahc/theses/chew-yi-feng-masters-thesis.pdf"&gt;Formal verification of quantum stabiliser codes by stabiliser formalism&lt;/a&gt;. ~ Qiuyi Feng. #ITP #CoqProver&lt;/li&gt;
&lt;li&gt;&lt;a href="https://ntrs.nasa.gov/api/citations/20250006044/downloads/NFM_Keynote_STRIVES-psm.pdf"&gt;Formal methods at NASA: Past, present, and future&lt;/a&gt;. ~ Paul Miner, Natasha Neogi. #FormalMethods #ITP #PVS&lt;/li&gt;
&lt;li&gt;&lt;a href="https://hal.science/hal-05133722/document"&gt;A proof-assisted conversion of signal temporal logic formulas into negative normal form&lt;/a&gt;. ~ Danil Berrah, François Pessaux, Alexandre Chapoutot. #ITP #Rocq&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kairose-master.github.io/mu_eq_pi/pdf/mu_eq_pi.pdf"&gt;Functorial flattening of the state monad via vector‐space projection (A formally verified collapse model in Lean 4)&lt;/a&gt;. ~ Jinu Jang. #ITP #LeanProver&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2507.00782v1"&gt;A diagrammatic calculus for a functional model of natural language semantics&lt;/a&gt;. ~ Matthieu Pierre Boyer. #Haskell #FunctionalProgramming&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.TYPES.2024.5"&gt;Implementing a type theory with observational equality, using normalisation by evaluation&lt;/a&gt;. ~ Matthew Sirman, Meven Lennon-Bertrand, Neel Krishnaswami. #Haskell #FunctionalProgramming&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2507.01903v1"&gt;AI4Research: A survey of artificial intelligence for scientific research&lt;/a&gt;. ~ Qiguang Chen et als. #AI&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/cursos/i1m-18"&gt;Curso "Informática (2018-19)"&lt;/a&gt;. #Haskell #ProgramaciónFuncional #Algorítmica #CálculoSimbólico #Maxima&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.archive.org/web/http://www.cs.us.es/~jalonso/cursos/i1m-18/temas/2018-19-I1M-temas-PF.pdf"&gt;Temas de "Programación funcional" (2018-19)&lt;/a&gt;. #Haskell #ProgramaciónFuncional&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.archive.org/web/http://www.cs.us.es/~jalonso/cursos/i1m-18/ejercicios/ejercicios-I1M-2018.pdf"&gt;Ejercicios de programación funcional con Haskell (curso 2018-19)&lt;/a&gt;. #Haskell #ProgramaciónFuncional&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.archive.org/web/https://raw.githubusercontent.com/jaalonso/Examenes_de_PF_con_Haskell_Vol10/master/Libro/Examenes_de_PF_con_Haskell_Vol10.pdf"&gt;Exámenes de programación funcional con Haskell (curso 2018-19)&lt;/a&gt;. #Haskell #ProgramaciónFuncional&lt;/li&gt;
&lt;/ul&gt;</description><category>AI</category><category>CoqProver</category><category>FormalMethods</category><category>FunctionalProgramming</category><category>Haskell</category><category>ITP</category><category>LeanProver</category><category>Math</category><category>Maxima</category><category>PVS</category><category>Rocq</category><guid>https://jaalonso.github.io/vestigium/posts/2025/07/06-readings_shared_07-05-25/</guid><pubDate>Sun, 06 Jul 2025 04:00:00 GMT</pubDate></item><item><title>Readings shared July 4, 2025</title><link>https://jaalonso.github.io/vestigium/posts/2025/07/05-readings_shared_07-04-25/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;The readings shared in &lt;a href="https://bsky.app/profile/jalonso.bsky.social"&gt;Bluesky&lt;/a&gt; on 4 July 2025 are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2506.22005v1"&gt;LeanConjecturer: Automatic generation of mathematical conjectures for theorem proving&lt;/a&gt;. ~ Naoto Onda et als. #ITP #LeanProver #Math #LLMs&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cs.uoregon.edu/research/summerschool/summer25/_lectures/Pientka-book-oplss.pdf"&gt;An introduction logical foundations of types and programming language&lt;/a&gt;. ~ Brigitte Pientka. #TypeTheory&lt;/li&gt;
&lt;li&gt;&lt;a href="https://academy.fpblock.com/blog/rust-haskell-reflections"&gt;Reflections on Haskell and Rust&lt;/a&gt;. ~ Sibi Prabakaran. #Haskell #FunctionalProgramming #Rust&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/H32kyA4BMz4"&gt;Category theory: Introducing the perfect language&lt;/a&gt;. ~ Richard Southwell #CategoryTheory&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/vestigium/posts/2025/07/04-leanconjecturer-automatic-generation-of-mathematical-conjectures-for-theorem-proving/"&gt;Reseña de «LeanConjecturer: Automatic generation of mathematical conjectures for theorem proving»&lt;/a&gt;. #ITP #LeanProver #Math #LLMs&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/cursos/m-ra-17"&gt;Curso "Razonamiento automático (2017-18)"&lt;/a&gt;. #RazonamientoAutomático #DemostraciónInteractiva #IsabelleHOL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/cursos/lmf-17"&gt;Curso "Lógica matemática y fundamentos (2017-18)"&lt;/a&gt;. #Lógica #IsabelleHOL&lt;/li&gt;
&lt;/ul&gt;</description><category>CategoryTheory</category><category>FunctionalProgramming</category><category>Haskell</category><category>IsabelleHOL</category><category>ITP</category><category>LeanProver</category><category>LLMs</category><category>Logic</category><category>Math</category><category>Rust</category><category>TypeTheory</category><guid>https://jaalonso.github.io/vestigium/posts/2025/07/05-readings_shared_07-04-25/</guid><pubDate>Sat, 05 Jul 2025 04:00:00 GMT</pubDate></item><item><title>Reseña de «LeanConjecturer: Automatic generation of mathematical conjectures for theorem proving»</title><link>https://jaalonso.github.io/vestigium/posts/2025/07/04-leanconjecturer-automatic-generation-of-mathematical-conjectures-for-theorem-proving/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;El campo de la demostración automática de teoremas se enfrenta a un
obstáculo fundamental: a pesar del enorme potencial de los modelos de
lenguaje para el razonamiento matemático, su progreso se ve frenado por
la drástica escasez de datos de entrenamiento formales y de alta
calidad. A diferencia de los vastos corpus de texto general, las
bibliotecas matemáticas como &lt;a href="https://leanprover-community.github.io/mathlib-overview.html"&gt;Mathlib&lt;/a&gt; son relativamente pequeñas, lo que
limita la capacidad de estos sistemas para aprender y mejorar.&lt;/p&gt;
&lt;p&gt;Para resolver este desafío, en el artículo &lt;a href="https://arxiv.org/pdf/2506.22005"&gt;LeanConjecturer: Automatic
generation of mathematical conjectures for theorem
proving&lt;/a&gt; se presenta una innovadora metodología para generar nuevas
conjeturas de manera automática. El sistema adopta un enfoque híbrido:
primero, extrae el contexto matemático (definiciones, variables) de un
archivo de &lt;a href="https://en.wikipedia.org/wiki/Lean_(proof_assistant)"&gt;Lean&lt;/a&gt; existente, y luego utiliza un modelo de lenguaje
exclusivamente para la tarea creativa de proponer nuevos enunciados de
teoremas. Estas propuestas se someten a un proceso de filtrado iterativo
para garantizar que sean sintácticamente correctas, novedosas y no
triviales, alimentando las conjeturas válidas de nuevo al sistema para
inspirar generaciones futuras cada vez más complejas.&lt;/p&gt;
&lt;p&gt;El resultado es un éxito rotundo: el sistema no solo logra generar miles
de conjeturas válidas y desafiantes, sino que demuestra su utilidad
práctica al ser utilizadas para entrenar y mejorar el rendimiento de un
demostrador de teoremas de vanguardia. Más allá de simplemente crear
datos, LeanConjecturer fue capaz de formular y verificar teoremas
genuinamente interesantes en el campo de la topología, estableciendo
nuevas conexiones entre conceptos matemáticos. Con ello, el proyecto no
solo ofrece una solución escalable al problema de la escasez de datos,
sino que también abre una prometedora vía hacia la colaboración entre
humanos y máquinas en el descubrimiento de nuevas matemáticas.&lt;/p&gt;</description><category>ITP</category><category>LeanProver</category><category>LLMs</category><guid>https://jaalonso.github.io/vestigium/posts/2025/07/04-leanconjecturer-automatic-generation-of-mathematical-conjectures-for-theorem-proving/</guid><pubDate>Fri, 04 Jul 2025 09:00:00 GMT</pubDate></item><item><title>Readings shared July 3, 2025</title><link>https://jaalonso.github.io/vestigium/posts/2025/07/04-readings_shared_07-03-25/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;The readings shared in &lt;a href="https://bsky.app/profile/jalonso.bsky.social"&gt;Bluesky&lt;/a&gt; on 3 July 2025 are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2507.01780"&gt;LeanLTL: A unifying framework for linear temporal logics in Lean&lt;/a&gt;. ~ Eric Vin, Kyle A. Miller, Daniel J. Fremont. #ITP #LeanProver&lt;/li&gt;
&lt;li&gt;&lt;a href="https://iccl.inf.tu-dresden.de/w/images/d/dc/ITP-2025-Paper-116-Camera-Ready.pdf"&gt;Verifying Datalog reasoning with Lean&lt;/a&gt;. ~ Johannes Tantow, Lukas Gerlach, Stephan Mennicke, Markus Krötzsch. #ITP #LeanProver&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2409.02603"&gt;Formalising inductive and coinductive containers&lt;/a&gt;. ~ Stefania Damato, Thorsten Altenkirch, Axel Ljungström. #ITP #Agda&lt;/li&gt;
&lt;/ul&gt;</description><category>Agda</category><category>ITP</category><category>LeanProver</category><guid>https://jaalonso.github.io/vestigium/posts/2025/07/04-readings_shared_07-03-25/</guid><pubDate>Fri, 04 Jul 2025 04:00:00 GMT</pubDate></item><item><title>Readings shared July 1, 2025</title><link>https://jaalonso.github.io/vestigium/posts/2025/07/02-readings_shared_07-01-25/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;The readings shared in &lt;a href="https://bsky.app/profile/jalonso.bsky.social"&gt;Bluesky&lt;/a&gt; on 1 July 2025 are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2506.20909v2"&gt;Diophantine equations over Z: Universal bounds and parallel formalization&lt;/a&gt;. ~ Jonas Bayer, Marco David, Malte Hassler, Yuri Matiyasevich, Dierk Schleicher. #ITP #IsabelleHOL #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gaearon/analysis-solutions"&gt;Solutions to Tao's "Analysis I"&lt;/a&gt;. ~ Dan Abramov. #ITP #LeanProver #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/c5LOYzZx-0c"&gt;The best new programming language is a proof assistant&lt;/a&gt;. ~ Harry Goldstein. #ITP #LeanProver&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/vestigium/posts/2025/07/01-diophantine-equations-over-z-universal-bounds-and-parallel-formalization/"&gt;Reseña de «Diophantine equations over Z: Universal bounds and parallel formalization»&lt;/a&gt;. #ITP #IsabelleHOL #Math&lt;/li&gt;
&lt;/ul&gt;</description><category>IsabelleHOL</category><category>ITP</category><category>LeanProver</category><category>Math</category><guid>https://jaalonso.github.io/vestigium/posts/2025/07/02-readings_shared_07-01-25/</guid><pubDate>Wed, 02 Jul 2025 04:00:00 GMT</pubDate></item><item><title>Readings shared June 29, 2025</title><link>https://jaalonso.github.io/vestigium/posts/2025/06/30-readings_shared_06-29-25/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;The readings shared in &lt;a href="https://bsky.app/profile/jalonso.bsky.social"&gt;Bluesky&lt;/a&gt; on 29 June 2025 are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://link.springer.com/article/10.1007/s10817-025-09724-x"&gt;Constructing the Lie algebra of smooth vector fields on a Lie group in Isabelle/HOL&lt;/a&gt;. ~ Richard Schmoetten, Jacques D. Fleuriot. #ITP #IsabelleHOL #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://inria.hal.science/hal-05128954/document"&gt;A Rocq formalization of simplicial Lagrange finite elements&lt;/a&gt;. ~ Sylvie Boldo, François Clément, Vincent Martin, Micaela Mayero, Houda Mouhcine. #ITP #Rocq #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aaltodoc.aalto.fi/server/api/core/bitstreams/e401c1e1-3dcb-4a31-b832-5ace8081dee9/content"&gt;Formal correctness proof of a mapping from a software specification language to the relational algebra&lt;/a&gt;. ~ Stan Dargent. #ITP #IsabelleHOL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://eprintspublications.npl.co.uk/10181/1/MS60.pdf"&gt;Functional programming (with some type theory) for metrology&lt;/a&gt;. ~ André Videla, Keith Lines. #Haskell #Idris #FunctionalProgramming&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2506.19923v1"&gt;Prover Agent: An agent-based framework for formal mathematical proofs&lt;/a&gt;. ~ Kaito Baba, Chaoran Liu, Shuhei Kurita, Akiyoshi Sannai. #LLMs #ITP #LeanProver&lt;/li&gt;
&lt;li&gt;&lt;a href="https://link.springer.com/article/10.1007/s12065-025-01062-6"&gt;Pearclustering: a novel clustering algorithm with an application to bike mobility&lt;/a&gt;. ~ Francisco Marquez-Saldaña, Gonzalo A. Aranda-Corral, Joaquín Borrego-Díaz. #AI&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/cursos/m-ra-14"&gt;Curso "Razonamiento automático (2014-15)"&lt;/a&gt;. #RazonamientoAutomático #DemostraciónInteractiva #IsabelleHOL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/cursos/i1m-15"&gt;Curso "Informática (2015-16)"&lt;/a&gt;. #Haskell #ProgramaciónFuncional #Algorítmica #CálculoSimbólico #Maxima&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.archive.org/web/http://www.cs.us.es/~jalonso/cursos/i1m-15/temas/2015-16-IM-temas-PF.pdf"&gt;Temas de "Programación funcional" (2015-16)&lt;/a&gt;. #Haskell #ProgramaciónFuncional&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.archive.org/web/http://www.cs.us.es/~jalonso/cursos/i1m-15/ejercicios/ejercicios-I1M-2015.pdf"&gt;Ejercicios de programación funcional con Haskell (curso 2015–16)&lt;/a&gt;. #Haskell #ProgramaciónFuncional&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.archive.org/web/https://raw.githubusercontent.com/jaalonso/Examenes_de_PF_con_Haskell_Vol7/master/Libro/Examenes_de_PF_con_Haskell_Vol7.pdf"&gt;Exámenes de programación funcional con Haskell (curso 2015–16)&lt;/a&gt;. #Haskell #ProgramaciónFuncional&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/cursos/li-15"&gt;Curso "Lógica informática (2015-16)&lt;/a&gt;. #Lógica #ProgramaciónLógica #Prolog&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.archive.org/web/http://www.cs.us.es/~jalonso/cursos/li-15/temas/temas-LI-2015-16.pdf"&gt;Temas de "Lógica informática" (curso 2015-16)&lt;/a&gt;. #Lógica #ProgramaciónLógica #Prolog&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.archive.org/web/https://www.cs.us.es/~jalonso/cursos/li-15/ejercicios/ejercicios-LI-2015-16.pdf"&gt;Ejercicios de "Lógica informática" (curso 2015-16)&lt;/a&gt;. #Lógica&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/cursos/lmf-15"&gt;Curso "Lógica matemática y fundamentos (2015-16)"&lt;/a&gt;. #Lógica #Haskell #ProgramaciónFuncional #IsabelleHOL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/cursos/i1m-16"&gt;Curso "Informática (2016-17)"&lt;/a&gt;. #Haskell #ProgramaciónFuncional #Algorítmica #CálculoSimbólico #Maxima&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.archive.org/web/http://www.cs.us.es/~jalonso/cursos/i1m-16/temas/2016-17-IM-temas-PF.pdf"&gt;Temas de "Programación funcional" (2016-17)&lt;/a&gt;. #Haskell #ProgramaciónFuncional&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.archive.org/web/http://www.cs.us.es/~jalonso/cursos/i1m-16/ejercicios/ejercicios-I1M-2016.pdf"&gt;Ejercicios de programación funcional con Haskell (curso 2016-17)&lt;/a&gt;. #Haskell #ProgramaciónFuncional&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.archive.org/web/https://raw.githubusercontent.com/jaalonso/Examenes_de_PF_con_Haskell_Vol8/master/Libro/Examenes_de_PF_con_Haskell_Vol8.pdf"&gt;Exámenes de programación funcional con Haskell (curso 2016-17)&lt;/a&gt;. #Haskell #ProgramaciónFuncional&lt;/li&gt;
&lt;/ul&gt;</description><category>AI</category><category>FunctionalProgramming</category><category>Haskell</category><category>Idris</category><category>IsabelleHOL</category><category>ITP</category><category>LeanProver</category><category>LLMs</category><category>Logic</category><category>LogicProgramming</category><category>Math</category><category>Maxima</category><category>Prolog</category><category>Rocq</category><guid>https://jaalonso.github.io/vestigium/posts/2025/06/30-readings_shared_06-29-25/</guid><pubDate>Mon, 30 Jun 2025 04:00:00 GMT</pubDate></item><item><title>Readings shared June 28, 2025</title><link>https://jaalonso.github.io/vestigium/posts/2025/06/29-readings_shared_06-28-25/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;The readings shared in &lt;a href="https://bsky.app/profile/jalonso.bsky.social"&gt;Bluesky&lt;/a&gt; on 28 June 2025 are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://drops.dagstuhl.de/storage/00lipics/lipics-vol333-ecoop2025/LIPIcs.ECOOP.2025.14/LIPIcs.ECOOP.2025.14.pdf"&gt;IsaBIL: A framework for verifying (in)correctness of binaries in Isabelle/HOL&lt;/a&gt;. ~ Matt Griffin, Brijesh Dongol, Azalea Raad. #ITP #IsabelleHOL&lt;/li&gt;
&lt;li&gt;&lt;a href="https://drops.dagstuhl.de/storage/00lipics/lipics-vol333-ecoop2025/LIPIcs.ECOOP.2025.31/LIPIcs.ECOOP.2025.31.pdf"&gt;Multiparty asynchronous session types: A mechanised proof of subject reduction&lt;/a&gt;. ~ Authors Dawit Tirore, Jesper Bengtson, Marco Carbone. #ITP #CoqProver&lt;/li&gt;
&lt;li&gt;&lt;a href="https://byorgey.github.io/blog/posts/2025/06/27/prefix-sums.html"&gt;Competitive programming in Haskell: prefix sums&lt;/a&gt;. ~ Brent Yorgey. #Haskell #FunctionalProgramming&lt;/li&gt;
&lt;li&gt;&lt;a href="https://openreview.net/pdf?id=GCjsjnl8yA"&gt;ProofAug: Efficient neural theorem proving via fine-grained proof structure analysis&lt;/a&gt;. ~ Haoxiong Liu et als. #LLMs #ITP #IsabelleHOL #LeanProver&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/cursos/li-14"&gt;Curso "Lógica informática (2014-15)"&lt;/a&gt;. #Lógica #ProgramaciónLógica #Prolog&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.archive.org/web/http://www.cs.us.es/~jalonso/cursos/li-14/temas/temas-LI-2014-15.pdf"&gt;Temas de "Lógica informática" (curso 2014-15)&lt;/a&gt;. #Lógica #ProgramaciónLógica #Prolog&lt;/li&gt;
&lt;li&gt;&lt;a href="https://web.archive.org/web/http://www.cs.us.es/~jalonso/cursos/li-14/temas/ejercicios-LI-2014-15.pdf"&gt;Ejercicios de "Lógica informática" (curso 2014-15)&lt;/a&gt;. #Lógica&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jaalonso.github.io/cursos/lmf-14"&gt;Curso "Lógica matemática y fundamentos (2014-15)"&lt;/a&gt;. #Lógica #Haskell #ProgramaciónFuncional #IsabelleHOL&lt;/li&gt;
&lt;/ul&gt;</description><category>CoqProver</category><category>FunctionalProgramming</category><category>Haskell</category><category>IsabelleHOL</category><category>ITP</category><category>LeanProver</category><category>LLMs</category><category>Logic</category><category>LogicProgramming</category><category>Prolog</category><guid>https://jaalonso.github.io/vestigium/posts/2025/06/29-readings_shared_06-28-25/</guid><pubDate>Sun, 29 Jun 2025 04:00:00 GMT</pubDate></item><item><title>Readings shared June 27, 2025</title><link>https://jaalonso.github.io/vestigium/posts/2025/06/28-readings_shared_06-27-25/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;p&gt;The readings shared in &lt;a href="https://bsky.app/profile/jalonso.bsky.social"&gt;Bluesky&lt;/a&gt; on 27 June 2025 are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://youtu.be/6uLXA9KROBg"&gt;Formalizing a proof in Lean by hand&lt;/a&gt;. ~ Terence Tao. #ITP #LeanProver #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2506.18616v2"&gt;A formalization of the Ionescu-Tulcea theorem in Mathlib&lt;/a&gt;. ~ Etienne Marion. #ITP #LeanProver #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2503.00959"&gt;Formalizing zeta and L-functions in Lean&lt;/a&gt;. ~ David Loeffler, Michael Stoll. #ITP #LeanProver #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://thmprover.wordpress.com/2025/06/24/redefinitions-in-mizar/"&gt;Redefinitions in Mizar&lt;/a&gt;. ~ Alex Nelson. #ITP #Mizar #Math&lt;/li&gt;
&lt;li&gt;&lt;a href="https://openreview.net/pdf?id=HuvAM5x2xG"&gt;Position: Formal mathematical reasoning (a new frontier in AI)&lt;/a&gt;. ~ Kaiyu Yang et als. #AI #LLMs #Math #AI4Math #ITP&lt;/li&gt;
&lt;li&gt;&lt;a href="https://arxiv.org/abs/2506.18383v1"&gt;LOGICPO: Efficient translation of NL-based logical problems to FOL using LLMs and preference optimization&lt;/a&gt;. ~ Koushik Viswanadha, Deepanway Ghosal, Somak Aditay. #LLMs #Math #Autoformalization&lt;/li&gt;
&lt;/ul&gt;</description><category>AI</category><category>AI4Math</category><category>Autoformalization</category><category>CategoryTheory</category><category>CompSci</category><category>ITP</category><category>LeanProver</category><category>LLMs</category><category>Math</category><category>Mizar</category><guid>https://jaalonso.github.io/vestigium/posts/2025/06/28-readings_shared_06-27-25/</guid><pubDate>Sat, 28 Jun 2025 04:00:00 GMT</pubDate></item></channel></rss>
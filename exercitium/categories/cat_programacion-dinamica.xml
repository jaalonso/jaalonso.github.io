<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Exercitium (Publicaciones sobre Programación dinámica)</title><link>https://jaalonso.github.io/exercitium/</link><description></description><atom:link href="https://jaalonso.github.io/exercitium/categories/cat_programacion-dinamica.xml" rel="self" type="application/rss+xml"></atom:link><language>es</language><copyright>Contents © 2025 &lt;a href="mailto:"&gt;José A. Alonso&lt;/a&gt; 
&lt;a rel="license" href="https://creativecommons.org/licenses/by-nc-sa/4.0/"&gt;
&lt;img alt="Creative Commons License BY-NC-SA"
style="border-width:0; margin-bottom:12px;"
src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"&gt;&lt;/a&gt;</copyright><lastBuildDate>Sat, 02 Aug 2025 17:18:10 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Camino de máxima suma en una matriz</title><link>https://jaalonso.github.io/exercitium/posts/2023/10/24-camino_de_maxima_suma_en_una_matriz/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;div&gt;&lt;p&gt;Los caminos desde el extremo superior izquierdo (posición (1,1)) hasta el extremo inferior derecho (posición (3,4)) en la matriz&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;   (  1  6 11  2 )
   (  7 12  3  8 )
   (  3  8  4  9 )
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;moviéndose en cada paso una casilla hacia la derecha o hacia abajo, son los siguientes:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;   [1,6,11,2,8,9]
   [1,6,11,3,8,9]
   [1,6,12,3,8,9]
   [1,7,12,3,8,9]
   [1,6,11,3,4,9]
   [1,6,12,3,4,9]
   [1,7,12,3,4,9]
   [1,6,12,8,4,9]
   [1,7,12,8,4,9]
   [1,7, 3,8,4,9]
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;La suma de los caminos son 37, 38, 39, 40, 34, 35, 36, 40, 41 y 32, respectivamente. El camino de máxima suma es el penúltimo (1, 7, 12, 8, 4, 9) que tiene una suma de 41.&lt;/p&gt;
&lt;p&gt;Definir la función&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;caminoMaxSuma&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Matrix&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;Int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;tal que &lt;code&gt;caminoMaxSuma m&lt;/code&gt; es un camino de máxima suma en la matriz &lt;code&gt;m&lt;/code&gt; desde el extremo superior izquierdo hasta el extremo inferior derecho, moviéndose en cada paso una casilla hacia abajo o hacia la derecha. Por ejemplo,&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;   λ&amp;gt; caminoMaxSuma (fromLists [[1,6,11,2],[7,12,3,8],[3,8,4,9]])
   [1,7,12,8,4,9]
   λ&amp;gt; sum (caminoMaxSuma (fromList 500 500 [1..]))
   187001249
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="https://jaalonso.github.io/exercitium/posts/2023/10/24-camino_de_maxima_suma_en_una_matriz/"&gt;Leer más…&lt;/a&gt; (quedan 5 minutos de lectura)&lt;/p&gt;&lt;/div&gt;</description><guid>https://jaalonso.github.io/exercitium/posts/2023/10/24-camino_de_maxima_suma_en_una_matriz/</guid><pubDate>Tue, 24 Oct 2023 04:00:00 GMT</pubDate></item><item><title>Máxima suma de los caminos en una matriz</title><link>https://jaalonso.github.io/exercitium/posts/2023/10/19-maxima_suma_de_los_caminos_en_una_matriz/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;div&gt;&lt;p&gt;Los caminos desde el extremo superior izquierdo (posición (1,1)) hasta el extremo inferior derecho (posición (3,4)) en la matriz&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;   (  1  6 11  2 )
   (  7 12  3  8 )
   (  3  8  4  9 )
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;moviéndose en cada paso una casilla hacia la derecha o hacia abajo, son los siguientes:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;   [1,6,11,2,8,9]
   [1,6,11,3,8,9]
   [1,6,12,3,8,9]
   [1,7,12,3,8,9]
   [1,6,11,3,4,9]
   [1,6,12,3,4,9]
   [1,7,12,3,4,9]
   [1,6,12,8,4,9]
   [1,7,12,8,4,9]
   [1,7, 3,8,4,9]
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;La suma de los caminos son 37, 38, 39, 40, 34, 35, 36, 40, 41 y 32, respectivamente. El camino de máxima suma es el penúltimo (1, 7, 12, 8, 4, 9) que tiene una suma de 41.&lt;/p&gt;
&lt;p&gt;Definir la función&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;maximaSuma&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Matrix&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;tal que &lt;code&gt;maximaSuma m&lt;/code&gt; es el máximo de las sumas de los caminos en la matriz &lt;code&gt;m&lt;/code&gt; desde el extremo superior izquierdo hasta el extremo inferior derecho, moviéndose en cada paso una casilla hacia abajo o hacia a derecha. Por ejemplo,&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;   λ&amp;gt; maximaSuma (fromLists [[1,6,11,2],[7,12,3,8],[3,8,4,9]])
   41
   λ&amp;gt; maximaSuma (fromList 800 800 [1..])
   766721999
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="https://jaalonso.github.io/exercitium/posts/2023/10/19-maxima_suma_de_los_caminos_en_una_matriz/"&gt;Leer más…&lt;/a&gt; (quedan 5 minutos de lectura)&lt;/p&gt;&lt;/div&gt;</description><guid>https://jaalonso.github.io/exercitium/posts/2023/10/19-maxima_suma_de_los_caminos_en_una_matriz/</guid><pubDate>Thu, 19 Oct 2023 04:00:00 GMT</pubDate></item><item><title>Caminos en una matriz (con programación dinámica)</title><link>https://jaalonso.github.io/exercitium/posts/2023/10/14-caminos_en_una_matriz/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;div&gt;&lt;p&gt;Los caminos desde el extremo superior izquierdo (posición (1,1)) hasta el extremo inferior derecho (posición (3,4)) en la matriz&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;   (  1  6 11  2 )
   (  7 12  3  8 )
   (  3  8  4  9 )
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;moviéndose en cada paso una casilla hacia la derecha o abajo, son los siguientes:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;   [1,6,11,2,8,9]
   [1,6,11,3,8,9]
   [1,6,12,3,8,9]
   [1,7,12,3,8,9]
   [1,6,11,3,4,9]
   [1,6,12,3,4,9]
   [1,7,12,3,4,9]
   [1,6,12,8,4,9]
   [1,7,12,8,4,9]
   [1,7, 3,8,4,9]
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Definir la función&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;caminos&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Matrix&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;Int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;[Int&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="err"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;tal que &lt;code&gt;caminos m&lt;/code&gt; es la lista de los caminos en la matriz &lt;code&gt;m&lt;/code&gt; desde  extremo superior izquierdo hasta el extremo inferior derecho, moviéndose en cada paso una casilla hacia la derecha o abajo. Por ejemplo,&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;   λ&amp;gt; caminos (fromLists [[1,6,11,2],[7,12,3,8],[3,8,4,9]])
   [[1,6,11,2,8,9],
    [1,6,11,3,8,9],
    [1,6,12,3,8,9],
    [1,7,12,3,8,9],
    [1,6,11,3,4,9],
    [1,6,12,3,4,9],
    [1,7,12,3,4,9],
    [1,6,12,8,4,9],
    [1,7,12,8,4,9],
    [1,7, 3,8,4,9]]
   λ&amp;gt; length (caminos (fromList 12 12 [1..]))
   705432
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="https://jaalonso.github.io/exercitium/posts/2023/10/14-caminos_en_una_matriz/"&gt;Leer más…&lt;/a&gt; (quedan 4 minutos de lectura)&lt;/p&gt;&lt;/div&gt;</description><guid>https://jaalonso.github.io/exercitium/posts/2023/10/14-caminos_en_una_matriz/</guid><pubDate>Sat, 14 Oct 2023 04:00:00 GMT</pubDate></item><item><title>Caminos en una retícula (con programación dinámica)</title><link>https://jaalonso.github.io/exercitium/posts/2023/10/09-programacion_dinamica_caminos_en_una_reticula/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;div&gt;&lt;p&gt;Se considera una retícula con sus posiciones numeradas, desde el vértice superior izquierdo, hacia la derecha y hacia abajo. Por ejemplo, la retícula de dimensión 3x4 se numera como sigue:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;   |-------+-------+-------+-------|
   | (1,1) | (1,2) | (1,3) | (1,4) |
   | (2,1) | (2,2) | (2,3) | (2,4) |
   | (3,1) | (3,2) | (3,3) | (3,4) |
   |-------+-------+-------+-------|
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Definir la función&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;caminos&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[[(&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;)]]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;tal que &lt;code&gt;caminos (m,n)&lt;/code&gt; es la lista de los caminos en la retícula de dimensión mxn desde (1,1) hasta (m,n). Por ejemplo,&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;   λ&amp;gt; caminos (2,3)
   [[(1,1),(1,2),(1,3),(2,3)],
    [(1,1),(1,2),(2,2),(2,3)],
    [(1,1),(2,1),(2,2),(2,3)]]
   λ&amp;gt; mapM_ print (caminos (3,4))
   [(1,1),(1,2),(1,3),(1,4),(2,4),(3,4)]
   [(1,1),(1,2),(1,3),(2,3),(2,4),(3,4)]
   [(1,1),(1,2),(2,2),(2,3),(2,4),(3,4)]
   [(1,1),(2,1),(2,2),(2,3),(2,4),(3,4)]
   [(1,1),(1,2),(1,3),(2,3),(3,3),(3,4)]
   [(1,1),(1,2),(2,2),(2,3),(3,3),(3,4)]
   [(1,1),(2,1),(2,2),(2,3),(3,3),(3,4)]
   [(1,1),(1,2),(2,2),(3,2),(3,3),(3,4)]
   [(1,1),(2,1),(2,2),(3,2),(3,3),(3,4)]
   [(1,1),(2,1),(3,1),(3,2),(3,3),(3,4)]
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="https://jaalonso.github.io/exercitium/posts/2023/10/09-programacion_dinamica_caminos_en_una_reticula/"&gt;Leer más…&lt;/a&gt; (quedan 3 minutos de lectura)&lt;/p&gt;&lt;/div&gt;</description><guid>https://jaalonso.github.io/exercitium/posts/2023/10/09-programacion_dinamica_caminos_en_una_reticula/</guid><pubDate>Mon, 09 Oct 2023 04:00:00 GMT</pubDate></item><item><title>La distancia Levenshtein (con programación dinámica)</title><link>https://jaalonso.github.io/exercitium/posts/2023/10/04-levenshtein/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;div&gt;&lt;p&gt;La distancia de Levenshtein (o distancia de edición) es el  mínimo de operaciones requeridas para transformar una cadena de caracteres en otra. Las operaciones de edición que se pueden hacer son:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;insertar un carácter (por ejemplo, de "abc" a "abca")&lt;/li&gt;
&lt;li&gt;eliminar un carácter (por ejemplo, de "abc" a "ac")&lt;/li&gt;
&lt;li&gt;sustituir un carácter (por ejemplo, de "abc" a "adc")&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Por ejemplo, la distancia de Levenshtein entre "casa" y "calle" es de 3 porque se necesitan al menos tres ediciones elementales para cambiar uno en el otro:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s"&gt;"casa"&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;--&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"cala"&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sustitución&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;de&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;'s'&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;por&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;'l'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s"&gt;"cala"&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="o"&gt;--&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"calla"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inserción&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;de&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;'l'&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;entre&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;'l'&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;'a'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="s"&gt;"calla"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;--&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"calle"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sustitución&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;de&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;'a'&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;por&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;'e'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Definir la función&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;levenshtein&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Int&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;tal que &lt;code&gt;levenshtein xs ys&lt;/code&gt; es la distancia de Levenshtein entre &lt;code&gt;xs&lt;/code&gt; e &lt;code&gt;ys&lt;/code&gt;. Por ejemplo,&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;   levenshtein "casa"  "calle"    ==  3
   levenshtein "calle" "casa"     ==  3
   levenshtein "casa"  "casa"     ==  0
   levenshtein "ana" "maria"      ==  3
   levenshtein "agua" "manantial" ==  7
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="https://jaalonso.github.io/exercitium/posts/2023/10/04-levenshtein/"&gt;Leer más…&lt;/a&gt; (quedan 4 minutos de lectura)&lt;/p&gt;&lt;/div&gt;</description><guid>https://jaalonso.github.io/exercitium/posts/2023/10/04-levenshtein/</guid><pubDate>Wed, 04 Oct 2023 04:00:00 GMT</pubDate></item><item><title>Subsecuencia común máxima</title><link>https://jaalonso.github.io/exercitium/posts/2023/09/29-subsecuencia_comun_maxima/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;div&gt;&lt;p&gt;Si a una secuencia X de elementos (pongamos por ejemplo,  le quitamos algunos de ellos y dejamos los que quedan en el orden en el que aparecían originalmente tenemos lo que se llama una subsecuencia de X. Por ejemplo, "aaoa" es una subsecuencia de la secuencia "amapola".&lt;/p&gt;
&lt;p&gt;El término también se aplica cuando quitamos todos los elementos (es decir, la secuencia vacía es siempre subsecuencia de cualquier secuencia) o cuando no quitamos ninguno (lo que significa que cualquier secuencia es siempre subsecuencia de sí misma).&lt;/p&gt;
&lt;p&gt;Dadas dos secuencias X e Y, decimos que Z es una subsecuencia  de X e Y si Z es subsecuencia de X y de Y. Por ejemplo, si X = "amapola" e Y = "matamoscas", la secuencia "aaoa" es una de las subsecuencias comunes de X e Y más larga, con longitud 4, ya que no hay ninguna subsecuencia común a X e Y de longitud mayor que 4. También son subsecuencias comunes de longitud 4 "maoa" o "amoa".&lt;/p&gt;
&lt;p&gt;Definir la función&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;scm&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Eq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;tal que &lt;code&gt;scm xs ys&lt;/code&gt; es una de las subsecuencias comunes de longitud máxima de &lt;code&gt;xs&lt;/code&gt; e &lt;code&gt;ys&lt;/code&gt;. Por ejemplo,&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;   scm "amapola" "matamoscas" == "amoa"
   scm "atamos" "matamoscas"  == "atamos"
   scm "aaa" "bbbb"           == ""
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="https://jaalonso.github.io/exercitium/posts/2023/09/29-subsecuencia_comun_maxima/"&gt;Leer más…&lt;/a&gt; (quedan 5 minutos de lectura)&lt;/p&gt;&lt;/div&gt;</description><guid>https://jaalonso.github.io/exercitium/posts/2023/09/29-subsecuencia_comun_maxima/</guid><pubDate>Fri, 29 Sep 2023 04:00:00 GMT</pubDate></item><item><title>Longitud de la subsecuencia común máxima.</title><link>https://jaalonso.github.io/exercitium/posts/2023/09/24-longitud_scm/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;div&gt;&lt;p&gt;Si a una secuencia X de elementos (pongamos por ejemplo, caracteres) le quitamos algunos de ellos y dejamos los que quedan en el orden en el que aparecían originalmente tenemos lo que se llama una subsecuencia de X. Por ejemplo, "aaoa" es una subsecuencia de la secuencia "amapola".&lt;/p&gt;
&lt;p&gt;El término también se aplica cuando quitamos todos los elementos (es decir, la secuencia vacía es siempre subsecuencia de cualquier secuencia) o cuando no quitamos ninguno (lo que significa que cualquier secuencia es siempre subsecuencia de sí misma).&lt;/p&gt;
&lt;p&gt;Dadas dos secuencias X e Y, decimos que Z es una subsecuencia común de X e Y si Z es subsecuencia de X y de Y. Por ejemplo, si X = "amapola" e Y = "matamoscas", la secuencia "aaoa" es una de las subsecuencias comunes de X e Y más larga, con longitud 4, ya que no hay ninguna subsecuencia común a X e Y de longitud mayor que 4. También son subsecuencias comunes de longitud 4 "maoa" o "amoa".&lt;/p&gt;
&lt;p&gt;Se desea encontrar la longitud de las subsecuencias comunes más largas de dos secuencias de caracteres dadas.&lt;/p&gt;
&lt;p&gt;Definir la función&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;longitudSCM&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Eq&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;Int&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;tal que &lt;code&gt;longitudSCM xs ys&lt;/code&gt; es la longitud de la subsecuencia máxima de &lt;code&gt;xs&lt;/code&gt; e &lt;code&gt;ys&lt;/code&gt;. Por ejemplo,&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;   longitudSCM "amapola" "matamoscas" == 4
   longitudSCM "atamos" "matamoscas"  == 6
   longitudSCM "aaa" "bbbb"           == 0
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="https://jaalonso.github.io/exercitium/posts/2023/09/24-longitud_scm/"&gt;Leer más…&lt;/a&gt; (quedan 4 minutos de lectura)&lt;/p&gt;&lt;/div&gt;</description><guid>https://jaalonso.github.io/exercitium/posts/2023/09/24-longitud_scm/</guid><pubDate>Sun, 24 Sep 2023 04:00:00 GMT</pubDate></item><item><title>Coeficientes binomiales</title><link>https://jaalonso.github.io/exercitium/posts/2023/09/19-coeficientes_binomiales/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;div&gt;&lt;p&gt;El coeficiente binomial &lt;code&gt;n&lt;/code&gt; sobre &lt;code&gt;k&lt;/code&gt; es el número de subconjuntos de &lt;code&gt;k&lt;/code&gt; elementos escogidos de un conjunto con &lt;code&gt;n&lt;/code&gt; elementos.&lt;/p&gt;
&lt;p&gt;Definir la función&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;binomial&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;Integer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;Integer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;Integer&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;tal que &lt;code&gt;binomial n k&lt;/code&gt; es el coeficiente binomial &lt;code&gt;n&lt;/code&gt; sobre &lt;code&gt;k&lt;/code&gt;. Por ejemplo,&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;   binomial 6 3 == 20
   binomial 5 2 == 10
   binomial 5 3 == 10
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="https://jaalonso.github.io/exercitium/posts/2023/09/19-coeficientes_binomiales/"&gt;Leer más…&lt;/a&gt; (quedan 3 minutos de lectura)&lt;/p&gt;&lt;/div&gt;</description><guid>https://jaalonso.github.io/exercitium/posts/2023/09/19-coeficientes_binomiales/</guid><pubDate>Tue, 19 Sep 2023 04:00:00 GMT</pubDate></item><item><title>La función de Fibonacci por programación dinámica</title><link>https://jaalonso.github.io/exercitium/posts/2023/09/14-la_funcion_de_fibonacci_por_programacion_dinamica/</link><dc:creator>José A. Alonso</dc:creator><description>&lt;div&gt;&lt;p&gt;Los primeros términos de la sucesión de Fibonacci son&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;   0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, ...
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Escribir dos definiciones (una recursiva y otra con programación dinámica) de la función&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="n"&gt;fib&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;Integer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;Integer&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;tal que &lt;code&gt;fib n&lt;/code&gt; es el &lt;code&gt;n&lt;/code&gt;-ésimo término de la sucesión de Fibonacci. Por ejemplo,&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;   fib 6 == 8
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Comparar la eficiencia de las dos definiciones.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://jaalonso.github.io/exercitium/posts/2023/09/14-la_funcion_de_fibonacci_por_programacion_dinamica/"&gt;Leer más…&lt;/a&gt; (quedan 2 minutos de lectura)&lt;/p&gt;&lt;/div&gt;</description><guid>https://jaalonso.github.io/exercitium/posts/2023/09/14-la_funcion_de_fibonacci_por_programacion_dinamica/</guid><pubDate>Thu, 14 Sep 2023 04:00:00 GMT</pubDate></item></channel></rss>
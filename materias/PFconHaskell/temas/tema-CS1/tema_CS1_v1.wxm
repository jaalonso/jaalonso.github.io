/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 0.8.4 ] */

/* [wxMaxima: title   start ]
Tema 14: Introducción a Maxima
   [wxMaxima: title   end   ] */

/* [wxMaxima: comment start ]
Maxima es un sistema de cálculo simbólico que puede manipular símbolos y
obtener soluciones exactas a muchos problemas matemáticos.   
   [wxMaxima: comment end   ] */

/* [wxMaxima: section start ]
Primeros pasos con Maxima
   [wxMaxima: section end   ] */

/* [wxMaxima: comment start ]
Las órdenes que van a a ser evaluadas se escriben en el entorno apropiado
(pulsar F5). 

Cada línea de comando termina con (;) que no es necesario escribir. 

Para calcular 5+(2/3)^(-2)
* Pulsar F5 para entrar en el entorno de evaluación.
* Escribir la expresión 5+(2/3)^(-2) y pulsar (Mayus.+Enter). 
* Después, pulsar F6 para volver a un entorno de texto.
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
5+(2/3)^(-2);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: section start ]
Maxima como calculadora
   [wxMaxima: section end   ] */

/* [wxMaxima: comment start ]
Vamos a proporcionar una idea rápida de los diferentes tipos de comandos que se
utilizan para comunicarse con Maxima. El objetivo no es de ser exhaustivos,
sino de empezar a realizar cálculos simples.  
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
100!;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Observad que no se han mostrado todas las cifras. Para poder ver todas las
cifras, se escribe: 
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
set_display(ascii)$ 100!; set_display(xml)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
sqrt(4);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
 sqrt(5);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Observad que la segunda raiz la muestra de forma simbólica. La razón es que
Maxima sólo realiza los cálculos exactos, salvo que se especifique lo
contrario. Por ejemplo, con el comando float: 
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
float(%);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
El símbolo % recupera el último resultado calculado.
   [wxMaxima: comment end   ] */

/* [wxMaxima: comment start ]
Para denotar una variable pueden usarse minúsculas, mayúsculas y  cifras. Para
asignar un valos a una variable, Maxima utiliza los dos puntos : y no el signo
=, que se reserva para representar ecuaciones.  
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
a : 5^2;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Una variable se puede usar en cálculos posteriores: 
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
sqrt(a)+1/a;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
No es necesario que una variable tenga un valor asignado para usarla en
expresiones. 
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
c:b^2;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
sqrt(c);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Observad que Maxima puede trabajar a nivel simbólico. Hay que tener en cuenta 
que Maxima distingue entre letras minúsculas y mayúsculas.
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
a+A;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
Exp(0); exp(0);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Maxima tiene algunas constantes predefinidas: %pi, %e (base del logaritmo
neperiano), %i (unidad compleja), inf (más infinito) y minf (menos infinito) 
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
log(%e);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
%pi;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
float(%pi);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: section start ]
Los complejos
   [wxMaxima: section end   ] */

/* [wxMaxima: input   start ] */
z:(1+%i)^2/(1-2*%i);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Para escribir z en forma algebraica, se utiliza el comando:
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
rectform(z);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
rectform(z);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Obtención de las partes real e imaginaria de un número complejo:
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
realpart(z); imagpart(z);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Módulo y argumento de z :
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
abs(z) ; carg(z);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: section start ]
Cálculos algebraicos básicos
   [wxMaxima: section end   ] */

/* [wxMaxima: comment start ]
Desarrollar, factorizar o simplificar una expresión
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
y : (a+b)^4;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
expand(%o33);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
factor(%);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
factor(x^4-1);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Para sustituir x por 3/z en la expresión anterior,  se utiliza la función subst
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
subst(3/z,x,%);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
La función ratsimp(f) realiza una simplificación racional de f y de todas sus
subexpresiones, devolviendo una expresión con un denominador común. 
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
ratsimp(%);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: section start ]
Ecuaciones y símbolos de ecuaciones
   [wxMaxima: section end   ] */

/* [wxMaxima: input   start ] */
solve(1+z+z^2=0,z);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Es posible anular el valor asignado a una variable mediante la función kill.
Para introducir un sistema de ecuaciones se una la función syst y para
resolverlo, la función solve. 
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
kill(y)$ syst : [m*x+y=1, x-m^2*y=m];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
solve(syst,[x,y]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
solve(A*x^2+B*x+C=0,x);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Maxima realiza una resolución aproximada de una ecuación mediante el comando
find_root(ecuación,incógnita,ex_inf,ex_sup); 
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
find_root(cos(x)=x,x,0,%pi);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
find_root(sin(x)=x, x, 0, %pi);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: section start ]
Obtención de la ayuda para una función
   [wxMaxima: section end   ] */

/* [wxMaxima: comment start ]
Para obtener ayuda sobre una función, basta situarse sobre la función y pulsar
F1. Por ejemplo, para la función "is": 
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
is(sqrt(t^2)=t);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
is(sqrt(t^2)=abs(t));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
is(t>0);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Fin.
   [wxMaxima: comment end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
